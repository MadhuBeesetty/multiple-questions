{"ast":null,"code":"import { BubbleMenuPlugin } from '@tiptap/extension-bubble-menu';\nimport React, { forwardRef, useState, useEffect, useDebugValue, useRef, createContext, useContext } from 'react';\nimport ReactDOM, { flushSync } from 'react-dom';\nimport { Editor, NodeView } from '@tiptap/core';\nexport * from '@tiptap/core';\nimport { FloatingMenuPlugin } from '@tiptap/extension-floating-menu';\nvar shim = {\n  exports: {}\n};\nvar useSyncExternalStoreShim_production_min = {};\n\n/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar hasRequiredUseSyncExternalStoreShim_production_min;\nfunction requireUseSyncExternalStoreShim_production_min() {\n  if (hasRequiredUseSyncExternalStoreShim_production_min) return useSyncExternalStoreShim_production_min;\n  hasRequiredUseSyncExternalStoreShim_production_min = 1;\n  var e = React;\n  function h(a, b) {\n    return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;\n  }\n  var k = \"function\" === typeof Object.is ? Object.is : h,\n    l = e.useState,\n    m = e.useEffect,\n    n = e.useLayoutEffect,\n    p = e.useDebugValue;\n  function q(a, b) {\n    var d = b(),\n      f = l({\n        inst: {\n          value: d,\n          getSnapshot: b\n        }\n      }),\n      c = f[0].inst,\n      g = f[1];\n    n(function () {\n      c.value = d;\n      c.getSnapshot = b;\n      r(c) && g({\n        inst: c\n      });\n    }, [a, d, b]);\n    m(function () {\n      r(c) && g({\n        inst: c\n      });\n      return a(function () {\n        r(c) && g({\n          inst: c\n        });\n      });\n    }, [a]);\n    p(d);\n    return d;\n  }\n  function r(a) {\n    var b = a.getSnapshot;\n    a = a.value;\n    try {\n      var d = b();\n      return !k(a, d);\n    } catch (f) {\n      return !0;\n    }\n  }\n  function t(a, b) {\n    return b();\n  }\n  var u = \"undefined\" === typeof window || \"undefined\" === typeof window.document || \"undefined\" === typeof window.document.createElement ? t : q;\n  useSyncExternalStoreShim_production_min.useSyncExternalStore = void 0 !== e.useSyncExternalStore ? e.useSyncExternalStore : u;\n  return useSyncExternalStoreShim_production_min;\n}\nvar useSyncExternalStoreShim_development = {};\n\n/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar hasRequiredUseSyncExternalStoreShim_development;\nfunction requireUseSyncExternalStoreShim_development() {\n  if (hasRequiredUseSyncExternalStoreShim_development) return useSyncExternalStoreShim_development;\n  hasRequiredUseSyncExternalStoreShim_development = 1;\n  if (process.env.NODE_ENV !== \"production\") {\n    (function () {\n      /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') {\n        __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n      }\n      var React$1 = React;\n      var ReactSharedInternals = React$1.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n      function error(format) {\n        {\n          {\n            for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n              args[_key2 - 1] = arguments[_key2];\n            }\n            printWarning('error', format, args);\n          }\n        }\n      }\n      function printWarning(level, format, args) {\n        // When changing this logic, you might want to also\n        // update consoleWithStackDev.www.js as well.\n        {\n          var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n          var stack = ReactDebugCurrentFrame.getStackAddendum();\n          if (stack !== '') {\n            format += '%s';\n            args = args.concat([stack]);\n          } // eslint-disable-next-line react-internal/safe-string-coercion\n\n          var argsWithFormat = args.map(function (item) {\n            return String(item);\n          }); // Careful: RN currently depends on this prefix\n\n          argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n          // breaks IE9: https://github.com/facebook/react/issues/13610\n          // eslint-disable-next-line react-internal/no-production-logging\n\n          Function.prototype.apply.call(console[level], console, argsWithFormat);\n        }\n      }\n\n      /**\n       * inlined Object.is polyfill to avoid requiring consumers ship their own\n       * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n       */\n      function is(x, y) {\n        return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n        ;\n      }\n      var objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n      // dispatch for CommonJS interop named imports.\n\n      var useState = React$1.useState,\n        useEffect = React$1.useEffect,\n        useLayoutEffect = React$1.useLayoutEffect,\n        useDebugValue = React$1.useDebugValue;\n      var didWarnOld18Alpha = false;\n      var didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n      // because of a very particular set of implementation details and assumptions\n      // -- change any one of them and it will break. The most important assumption\n      // is that updates are always synchronous, because concurrent rendering is\n      // only available in versions of React that also have a built-in\n      // useSyncExternalStore API. And we only use this shim when the built-in API\n      // does not exist.\n      //\n      // Do not assume that the clever hacks used by this hook also work in general.\n      // The point of this shim is to replace the need for hacks by other libraries.\n\n      function useSyncExternalStore(subscribe, getSnapshot,\n      // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n      // React do not expose a way to check if we're hydrating. So users of the shim\n      // will need to track that themselves and return the correct value\n      // from `getSnapshot`.\n      getServerSnapshot) {\n        {\n          if (!didWarnOld18Alpha) {\n            if (React$1.startTransition !== undefined) {\n              didWarnOld18Alpha = true;\n              error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\n            }\n          }\n        } // Read the current snapshot from the store on every render. Again, this\n        // breaks the rules of React, and only works here because of specific\n        // implementation details, most importantly that updates are\n        // always synchronous.\n\n        var value = getSnapshot();\n        {\n          if (!didWarnUncachedGetSnapshot) {\n            var cachedValue = getSnapshot();\n            if (!objectIs(value, cachedValue)) {\n              error('The result of getSnapshot should be cached to avoid an infinite loop');\n              didWarnUncachedGetSnapshot = true;\n            }\n          }\n        } // Because updates are synchronous, we don't queue them. Instead we force a\n        // re-render whenever the subscribed state changes by updating an some\n        // arbitrary useState hook. Then, during render, we call getSnapshot to read\n        // the current value.\n        //\n        // Because we don't actually use the state returned by the useState hook, we\n        // can save a bit of memory by storing other stuff in that slot.\n        //\n        // To implement the early bailout, we need to track some things on a mutable\n        // object. Usually, we would put that in a useRef hook, but we can stash it in\n        // our useState hook instead.\n        //\n        // To force a re-render, we call forceUpdate({inst}). That works because the\n        // new object always fails an equality check.\n\n        var _useState = useState({\n            inst: {\n              value: value,\n              getSnapshot: getSnapshot\n            }\n          }),\n          inst = _useState[0].inst,\n          forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n        // in the layout phase so we can access it during the tearing check that\n        // happens on subscribe.\n\n        useLayoutEffect(function () {\n          inst.value = value;\n          inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n          // commit phase if there was an interleaved mutation. In concurrent mode\n          // this can happen all the time, but even in synchronous mode, an earlier\n          // effect may have mutated the store.\n\n          if (checkIfSnapshotChanged(inst)) {\n            // Force a re-render.\n            forceUpdate({\n              inst: inst\n            });\n          }\n        }, [subscribe, value, getSnapshot]);\n        useEffect(function () {\n          // Check for changes right before subscribing. Subsequent changes will be\n          // detected in the subscription handler.\n          if (checkIfSnapshotChanged(inst)) {\n            // Force a re-render.\n            forceUpdate({\n              inst: inst\n            });\n          }\n          var handleStoreChange = function () {\n            // TODO: Because there is no cross-renderer API for batching updates, it's\n            // up to the consumer of this library to wrap their subscription event\n            // with unstable_batchedUpdates. Should we try to detect when this isn't\n            // the case and print a warning in development?\n            // The store changed. Check if the snapshot changed since the last time we\n            // read from the store.\n            if (checkIfSnapshotChanged(inst)) {\n              // Force a re-render.\n              forceUpdate({\n                inst: inst\n              });\n            }\n          }; // Subscribe to the store and return a clean-up function.\n\n          return subscribe(handleStoreChange);\n        }, [subscribe]);\n        useDebugValue(value);\n        return value;\n      }\n      function checkIfSnapshotChanged(inst) {\n        var latestGetSnapshot = inst.getSnapshot;\n        var prevValue = inst.value;\n        try {\n          var nextValue = latestGetSnapshot();\n          return !objectIs(prevValue, nextValue);\n        } catch (error) {\n          return true;\n        }\n      }\n      function useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n        // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n        // React do not expose a way to check if we're hydrating. So users of the shim\n        // will need to track that themselves and return the correct value\n        // from `getSnapshot`.\n        return getSnapshot();\n      }\n      var canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n      var isServerEnvironment = !canUseDOM;\n      var shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\n      var useSyncExternalStore$2 = React$1.useSyncExternalStore !== undefined ? React$1.useSyncExternalStore : shim;\n      useSyncExternalStoreShim_development.useSyncExternalStore = useSyncExternalStore$2;\n      /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') {\n        __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n      }\n    })();\n  }\n  return useSyncExternalStoreShim_development;\n}\nif (process.env.NODE_ENV === 'production') {\n  shim.exports = requireUseSyncExternalStoreShim_production_min();\n} else {\n  shim.exports = requireUseSyncExternalStoreShim_development();\n}\nvar shimExports = shim.exports;\nconst mergeRefs = (...refs) => {\n  return node => {\n    refs.forEach(ref => {\n      if (typeof ref === 'function') {\n        ref(node);\n      } else if (ref) {\n        ref.current = node;\n      }\n    });\n  };\n};\n/**\n * This component renders all of the editor's node views.\n */\nconst Portals = ({\n  contentComponent\n}) => {\n  // For performance reasons, we render the node view portals on state changes only\n  const renderers = shimExports.useSyncExternalStore(contentComponent.subscribe, contentComponent.getSnapshot, contentComponent.getServerSnapshot);\n  // This allows us to directly render the portals without any additional wrapper\n  return React.createElement(React.Fragment, null, Object.values(renderers));\n};\nfunction getInstance() {\n  const subscribers = new Set();\n  let renderers = {};\n  return {\n    /**\n     * Subscribe to the editor instance's changes.\n     */\n    subscribe(callback) {\n      subscribers.add(callback);\n      return () => {\n        subscribers.delete(callback);\n      };\n    },\n    getSnapshot() {\n      return renderers;\n    },\n    getServerSnapshot() {\n      return renderers;\n    },\n    /**\n     * Adds a new NodeView Renderer to the editor.\n     */\n    setRenderer(id, renderer) {\n      renderers = {\n        ...renderers,\n        [id]: ReactDOM.createPortal(renderer.reactElement, renderer.element, id)\n      };\n      subscribers.forEach(subscriber => subscriber());\n    },\n    /**\n     * Removes a NodeView Renderer from the editor.\n     */\n    removeRenderer(id) {\n      const nextRenderers = {\n        ...renderers\n      };\n      delete nextRenderers[id];\n      renderers = nextRenderers;\n      subscribers.forEach(subscriber => subscriber());\n    }\n  };\n}\nclass PureEditorContent extends React.Component {\n  constructor(props) {\n    var _a;\n    super(props);\n    this.editorContentRef = React.createRef();\n    this.initialized = false;\n    this.state = {\n      hasContentComponentInitialized: Boolean((_a = props.editor) === null || _a === void 0 ? void 0 : _a.contentComponent)\n    };\n  }\n  componentDidMount() {\n    this.init();\n  }\n  componentDidUpdate() {\n    this.init();\n  }\n  init() {\n    const editor = this.props.editor;\n    if (editor && !editor.isDestroyed && editor.options.element) {\n      if (editor.contentComponent) {\n        return;\n      }\n      const element = this.editorContentRef.current;\n      element.append(...editor.options.element.childNodes);\n      editor.setOptions({\n        element\n      });\n      editor.contentComponent = getInstance();\n      // Has the content component been initialized?\n      if (!this.state.hasContentComponentInitialized) {\n        // Subscribe to the content component\n        this.unsubscribeToContentComponent = editor.contentComponent.subscribe(() => {\n          this.setState(prevState => {\n            if (!prevState.hasContentComponentInitialized) {\n              return {\n                hasContentComponentInitialized: true\n              };\n            }\n            return prevState;\n          });\n          // Unsubscribe to previous content component\n          if (this.unsubscribeToContentComponent) {\n            this.unsubscribeToContentComponent();\n          }\n        });\n      }\n      editor.createNodeViews();\n      this.initialized = true;\n    }\n  }\n  componentWillUnmount() {\n    const editor = this.props.editor;\n    if (!editor) {\n      return;\n    }\n    this.initialized = false;\n    if (!editor.isDestroyed) {\n      editor.view.setProps({\n        nodeViews: {}\n      });\n    }\n    if (this.unsubscribeToContentComponent) {\n      this.unsubscribeToContentComponent();\n    }\n    editor.contentComponent = null;\n    if (!editor.options.element.firstChild) {\n      return;\n    }\n    const newElement = document.createElement('div');\n    newElement.append(...editor.options.element.childNodes);\n    editor.setOptions({\n      element: newElement\n    });\n  }\n  render() {\n    const {\n      editor,\n      innerRef,\n      ...rest\n    } = this.props;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      ref: mergeRefs(innerRef, this.editorContentRef),\n      ...rest\n    }), (editor === null || editor === void 0 ? void 0 : editor.contentComponent) && React.createElement(Portals, {\n      contentComponent: editor.contentComponent\n    }));\n  }\n}\n// EditorContent should be re-created whenever the Editor instance changes\nconst EditorContentWithKey = forwardRef((props, ref) => {\n  const key = React.useMemo(() => {\n    return Math.floor(Math.random() * 0xffffffff).toString();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.editor]);\n  // Can't use JSX here because it conflicts with the type definition of Vue's JSX, so use createElement\n  return React.createElement(PureEditorContent, {\n    key,\n    innerRef: ref,\n    ...props\n  });\n});\nconst EditorContent = React.memo(EditorContentWithKey);\nvar withSelector = {\n  exports: {}\n};\nvar withSelector_production_min = {};\n\n/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar hasRequiredWithSelector_production_min;\nfunction requireWithSelector_production_min() {\n  if (hasRequiredWithSelector_production_min) return withSelector_production_min;\n  hasRequiredWithSelector_production_min = 1;\n  var h = React,\n    n = shimExports;\n  function p(a, b) {\n    return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;\n  }\n  var q = \"function\" === typeof Object.is ? Object.is : p,\n    r = n.useSyncExternalStore,\n    t = h.useRef,\n    u = h.useEffect,\n    v = h.useMemo,\n    w = h.useDebugValue;\n  withSelector_production_min.useSyncExternalStoreWithSelector = function (a, b, e, l, g) {\n    var c = t(null);\n    if (null === c.current) {\n      var f = {\n        hasValue: !1,\n        value: null\n      };\n      c.current = f;\n    } else f = c.current;\n    c = v(function () {\n      function a(a) {\n        if (!c) {\n          c = !0;\n          d = a;\n          a = l(a);\n          if (void 0 !== g && f.hasValue) {\n            var b = f.value;\n            if (g(b, a)) return k = b;\n          }\n          return k = a;\n        }\n        b = k;\n        if (q(d, a)) return b;\n        var e = l(a);\n        if (void 0 !== g && g(b, e)) return b;\n        d = a;\n        return k = e;\n      }\n      var c = !1,\n        d,\n        k,\n        m = void 0 === e ? null : e;\n      return [function () {\n        return a(b());\n      }, null === m ? void 0 : function () {\n        return a(m());\n      }];\n    }, [b, e, l, g]);\n    var d = r(a, c[0], c[1]);\n    u(function () {\n      f.hasValue = !0;\n      f.value = d;\n    }, [d]);\n    w(d);\n    return d;\n  };\n  return withSelector_production_min;\n}\nvar withSelector_development = {};\n\n/**\n * @license React\n * use-sync-external-store-shim/with-selector.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar hasRequiredWithSelector_development;\nfunction requireWithSelector_development() {\n  if (hasRequiredWithSelector_development) return withSelector_development;\n  hasRequiredWithSelector_development = 1;\n  if (process.env.NODE_ENV !== \"production\") {\n    (function () {\n      /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') {\n        __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n      }\n      var React$1 = React;\n      var shim = shimExports;\n\n      /**\n       * inlined Object.is polyfill to avoid requiring consumers ship their own\n       * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n       */\n      function is(x, y) {\n        return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n        ;\n      }\n      var objectIs = typeof Object.is === 'function' ? Object.is : is;\n      var useSyncExternalStore = shim.useSyncExternalStore;\n\n      // for CommonJS interop.\n\n      var useRef = React$1.useRef,\n        useEffect = React$1.useEffect,\n        useMemo = React$1.useMemo,\n        useDebugValue = React$1.useDebugValue; // Same as useSyncExternalStore, but supports selector and isEqual arguments.\n\n      function useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {\n        // Use this to track the rendered snapshot.\n        var instRef = useRef(null);\n        var inst;\n        if (instRef.current === null) {\n          inst = {\n            hasValue: false,\n            value: null\n          };\n          instRef.current = inst;\n        } else {\n          inst = instRef.current;\n        }\n        var _useMemo = useMemo(function () {\n            // Track the memoized state using closure variables that are local to this\n            // memoized instance of a getSnapshot function. Intentionally not using a\n            // useRef hook, because that state would be shared across all concurrent\n            // copies of the hook/component.\n            var hasMemo = false;\n            var memoizedSnapshot;\n            var memoizedSelection;\n            var memoizedSelector = function (nextSnapshot) {\n              if (!hasMemo) {\n                // The first time the hook is called, there is no memoized result.\n                hasMemo = true;\n                memoizedSnapshot = nextSnapshot;\n                var _nextSelection = selector(nextSnapshot);\n                if (isEqual !== undefined) {\n                  // Even if the selector has changed, the currently rendered selection\n                  // may be equal to the new selection. We should attempt to reuse the\n                  // current value if possible, to preserve downstream memoizations.\n                  if (inst.hasValue) {\n                    var currentSelection = inst.value;\n                    if (isEqual(currentSelection, _nextSelection)) {\n                      memoizedSelection = currentSelection;\n                      return currentSelection;\n                    }\n                  }\n                }\n                memoizedSelection = _nextSelection;\n                return _nextSelection;\n              } // We may be able to reuse the previous invocation's result.\n\n              // We may be able to reuse the previous invocation's result.\n              var prevSnapshot = memoizedSnapshot;\n              var prevSelection = memoizedSelection;\n              if (objectIs(prevSnapshot, nextSnapshot)) {\n                // The snapshot is the same as last time. Reuse the previous selection.\n                return prevSelection;\n              } // The snapshot has changed, so we need to compute a new selection.\n\n              // The snapshot has changed, so we need to compute a new selection.\n              var nextSelection = selector(nextSnapshot); // If a custom isEqual function is provided, use that to check if the data\n              // has changed. If it hasn't, return the previous selection. That signals\n              // to React that the selections are conceptually equal, and we can bail\n              // out of rendering.\n\n              // If a custom isEqual function is provided, use that to check if the data\n              // has changed. If it hasn't, return the previous selection. That signals\n              // to React that the selections are conceptually equal, and we can bail\n              // out of rendering.\n              if (isEqual !== undefined && isEqual(prevSelection, nextSelection)) {\n                return prevSelection;\n              }\n              memoizedSnapshot = nextSnapshot;\n              memoizedSelection = nextSelection;\n              return nextSelection;\n            }; // Assigning this to a constant so that Flow knows it can't change.\n\n            // Assigning this to a constant so that Flow knows it can't change.\n            var maybeGetServerSnapshot = getServerSnapshot === undefined ? null : getServerSnapshot;\n            var getSnapshotWithSelector = function () {\n              return memoizedSelector(getSnapshot());\n            };\n            var getServerSnapshotWithSelector = maybeGetServerSnapshot === null ? undefined : function () {\n              return memoizedSelector(maybeGetServerSnapshot());\n            };\n            return [getSnapshotWithSelector, getServerSnapshotWithSelector];\n          }, [getSnapshot, getServerSnapshot, selector, isEqual]),\n          getSelection = _useMemo[0],\n          getServerSelection = _useMemo[1];\n        var value = useSyncExternalStore(subscribe, getSelection, getServerSelection);\n        useEffect(function () {\n          inst.hasValue = true;\n          inst.value = value;\n        }, [value]);\n        useDebugValue(value);\n        return value;\n      }\n      withSelector_development.useSyncExternalStoreWithSelector = useSyncExternalStoreWithSelector;\n      /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') {\n        __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n      }\n    })();\n  }\n  return withSelector_development;\n}\nif (process.env.NODE_ENV === 'production') {\n  withSelector.exports = requireWithSelector_production_min();\n} else {\n  withSelector.exports = requireWithSelector_development();\n}\nvar withSelectorExports = withSelector.exports;\n\n/**\n * To synchronize the editor instance with the component state,\n * we need to create a separate instance that is not affected by the component re-renders.\n */\nclass EditorStateManager {\n  constructor(initialEditor) {\n    this.transactionNumber = 0;\n    this.lastTransactionNumber = 0;\n    this.subscribers = new Set();\n    this.editor = initialEditor;\n    this.lastSnapshot = {\n      editor: initialEditor,\n      transactionNumber: 0\n    };\n    this.getSnapshot = this.getSnapshot.bind(this);\n    this.getServerSnapshot = this.getServerSnapshot.bind(this);\n    this.watch = this.watch.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n  }\n  /**\n   * Get the current editor instance.\n   */\n  getSnapshot() {\n    if (this.transactionNumber === this.lastTransactionNumber) {\n      return this.lastSnapshot;\n    }\n    this.lastTransactionNumber = this.transactionNumber;\n    this.lastSnapshot = {\n      editor: this.editor,\n      transactionNumber: this.transactionNumber\n    };\n    return this.lastSnapshot;\n  }\n  /**\n   * Always disable the editor on the server-side.\n   */\n  getServerSnapshot() {\n    return {\n      editor: null,\n      transactionNumber: 0\n    };\n  }\n  /**\n   * Subscribe to the editor instance's changes.\n   */\n  subscribe(callback) {\n    this.subscribers.add(callback);\n    return () => {\n      this.subscribers.delete(callback);\n    };\n  }\n  /**\n   * Watch the editor instance for changes.\n   */\n  watch(nextEditor) {\n    this.editor = nextEditor;\n    if (this.editor) {\n      /**\n       * This will force a re-render when the editor state changes.\n       * This is to support things like `editor.can().toggleBold()` in components that `useEditor`.\n       * This could be more efficient, but it's a good trade-off for now.\n       */\n      const fn = () => {\n        this.transactionNumber += 1;\n        this.subscribers.forEach(callback => callback());\n      };\n      const currentEditor = this.editor;\n      currentEditor.on('transaction', fn);\n      return () => {\n        currentEditor.off('transaction', fn);\n      };\n    }\n    return undefined;\n  }\n}\nfunction useEditorState(options) {\n  const [editorInstance] = useState(() => new EditorStateManager(options.editor));\n  // Using the `useSyncExternalStore` hook to sync the editor instance with the component state\n  const selectedState = withSelectorExports.useSyncExternalStoreWithSelector(editorInstance.subscribe, editorInstance.getSnapshot, editorInstance.getServerSnapshot, options.selector, options.equalityFn);\n  useEffect(() => {\n    return editorInstance.watch(options.editor);\n  }, [options.editor, editorInstance]);\n  useDebugValue(selectedState);\n  return selectedState;\n}\nconst isDev = process.env.NODE_ENV !== 'production';\nconst isSSR = typeof window === 'undefined';\nconst isNext = isSSR || Boolean(typeof window !== 'undefined' && window.next);\n/**\n * This class handles the creation, destruction, and re-creation of the editor instance.\n */\nclass EditorInstanceManager {\n  constructor(options) {\n    /**\n     * The current editor instance.\n     */\n    this.editor = null;\n    /**\n     * The subscriptions to notify when the editor instance\n     * has been created or destroyed.\n     */\n    this.subscriptions = new Set();\n    /**\n     * Whether the editor has been mounted.\n     */\n    this.isComponentMounted = false;\n    /**\n     * The most recent dependencies array.\n     */\n    this.previousDeps = null;\n    /**\n     * The unique instance ID. This is used to identify the editor instance. And will be re-generated for each new instance.\n     */\n    this.instanceId = '';\n    this.options = options;\n    this.subscriptions = new Set();\n    this.setEditor(this.getInitialEditor());\n    this.scheduleDestroy();\n    this.getEditor = this.getEditor.bind(this);\n    this.getServerSnapshot = this.getServerSnapshot.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.refreshEditorInstance = this.refreshEditorInstance.bind(this);\n    this.scheduleDestroy = this.scheduleDestroy.bind(this);\n    this.onRender = this.onRender.bind(this);\n    this.createEditor = this.createEditor.bind(this);\n  }\n  setEditor(editor) {\n    this.editor = editor;\n    this.instanceId = Math.random().toString(36).slice(2, 9);\n    // Notify all subscribers that the editor instance has been created\n    this.subscriptions.forEach(cb => cb());\n  }\n  getInitialEditor() {\n    if (this.options.current.immediatelyRender === undefined) {\n      if (isSSR || isNext) {\n        // TODO in the next major release, we should throw an error here\n        if (isDev) {\n          /**\n           * Throw an error in development, to make sure the developer is aware that tiptap cannot be SSR'd\n           * and that they need to set `immediatelyRender` to `false` to avoid hydration mismatches.\n           */\n          console.warn('Tiptap Error: SSR has been detected, please set `immediatelyRender` explicitly to `false` to avoid hydration mismatches.');\n        }\n        // Best faith effort in production, run the code in the legacy mode to avoid hydration mismatches and errors in production\n        return null;\n      }\n      // Default to immediately rendering when client-side rendering\n      return this.createEditor();\n    }\n    if (this.options.current.immediatelyRender && isSSR && isDev) {\n      // Warn in development, to make sure the developer is aware that tiptap cannot be SSR'd, set `immediatelyRender` to `false` to avoid hydration mismatches.\n      throw new Error('Tiptap Error: SSR has been detected, and `immediatelyRender` has been set to `true` this is an unsupported configuration that may result in errors, explicitly set `immediatelyRender` to `false` to avoid hydration mismatches.');\n    }\n    if (this.options.current.immediatelyRender) {\n      return this.createEditor();\n    }\n    return null;\n  }\n  /**\n   * Create a new editor instance. And attach event listeners.\n   */\n  createEditor() {\n    const optionsToApply = {\n      ...this.options.current,\n      // Always call the most recent version of the callback function by default\n      onBeforeCreate: (...args) => {\n        var _a, _b;\n        return (_b = (_a = this.options.current).onBeforeCreate) === null || _b === void 0 ? void 0 : _b.call(_a, ...args);\n      },\n      onBlur: (...args) => {\n        var _a, _b;\n        return (_b = (_a = this.options.current).onBlur) === null || _b === void 0 ? void 0 : _b.call(_a, ...args);\n      },\n      onCreate: (...args) => {\n        var _a, _b;\n        return (_b = (_a = this.options.current).onCreate) === null || _b === void 0 ? void 0 : _b.call(_a, ...args);\n      },\n      onDestroy: (...args) => {\n        var _a, _b;\n        return (_b = (_a = this.options.current).onDestroy) === null || _b === void 0 ? void 0 : _b.call(_a, ...args);\n      },\n      onFocus: (...args) => {\n        var _a, _b;\n        return (_b = (_a = this.options.current).onFocus) === null || _b === void 0 ? void 0 : _b.call(_a, ...args);\n      },\n      onSelectionUpdate: (...args) => {\n        var _a, _b;\n        return (_b = (_a = this.options.current).onSelectionUpdate) === null || _b === void 0 ? void 0 : _b.call(_a, ...args);\n      },\n      onTransaction: (...args) => {\n        var _a, _b;\n        return (_b = (_a = this.options.current).onTransaction) === null || _b === void 0 ? void 0 : _b.call(_a, ...args);\n      },\n      onUpdate: (...args) => {\n        var _a, _b;\n        return (_b = (_a = this.options.current).onUpdate) === null || _b === void 0 ? void 0 : _b.call(_a, ...args);\n      },\n      onContentError: (...args) => {\n        var _a, _b;\n        return (_b = (_a = this.options.current).onContentError) === null || _b === void 0 ? void 0 : _b.call(_a, ...args);\n      }\n    };\n    const editor = new Editor(optionsToApply);\n    // no need to keep track of the event listeners, they will be removed when the editor is destroyed\n    return editor;\n  }\n  /**\n   * Get the current editor instance.\n   */\n  getEditor() {\n    return this.editor;\n  }\n  /**\n   * Always disable the editor on the server-side.\n   */\n  getServerSnapshot() {\n    return null;\n  }\n  /**\n   * Subscribe to the editor instance's changes.\n   */\n  subscribe(onStoreChange) {\n    this.subscriptions.add(onStoreChange);\n    return () => {\n      this.subscriptions.delete(onStoreChange);\n    };\n  }\n  /**\n   * On each render, we will create, update, or destroy the editor instance.\n   * @param deps The dependencies to watch for changes\n   * @returns A cleanup function\n   */\n  onRender(deps) {\n    // The returned callback will run on each render\n    return () => {\n      this.isComponentMounted = true;\n      // Cleanup any scheduled destructions, since we are currently rendering\n      clearTimeout(this.scheduledDestructionTimeout);\n      if (this.editor && !this.editor.isDestroyed && deps.length === 0) {\n        // if the editor does exist & deps are empty, we don't need to re-initialize the editor\n        // we can fast-path to update the editor options on the existing instance\n        this.editor.setOptions(this.options.current);\n      } else {\n        // When the editor:\n        // - does not yet exist\n        // - is destroyed\n        // - the deps array changes\n        // We need to destroy the editor instance and re-initialize it\n        this.refreshEditorInstance(deps);\n      }\n      return () => {\n        this.isComponentMounted = false;\n        this.scheduleDestroy();\n      };\n    };\n  }\n  /**\n   * Recreate the editor instance if the dependencies have changed.\n   */\n  refreshEditorInstance(deps) {\n    if (this.editor && !this.editor.isDestroyed) {\n      // Editor instance already exists\n      if (this.previousDeps === null) {\n        // If lastDeps has not yet been initialized, reuse the current editor instance\n        this.previousDeps = deps;\n        return;\n      }\n      const depsAreEqual = this.previousDeps.length === deps.length && this.previousDeps.every((dep, index) => dep === deps[index]);\n      if (depsAreEqual) {\n        // deps exist and are equal, no need to recreate\n        return;\n      }\n    }\n    if (this.editor && !this.editor.isDestroyed) {\n      // Destroy the editor instance if it exists\n      this.editor.destroy();\n    }\n    this.setEditor(this.createEditor());\n    // Update the lastDeps to the current deps\n    this.previousDeps = deps;\n  }\n  /**\n   * Schedule the destruction of the editor instance.\n   * This will only destroy the editor if it was not mounted on the next tick.\n   * This is to avoid destroying the editor instance when it's actually still mounted.\n   */\n  scheduleDestroy() {\n    const currentInstanceId = this.instanceId;\n    const currentEditor = this.editor;\n    // Wait two ticks to see if the component is still mounted\n    this.scheduledDestructionTimeout = setTimeout(() => {\n      if (this.isComponentMounted && this.instanceId === currentInstanceId) {\n        // If still mounted on the following tick, with the same instanceId, do not destroy the editor\n        if (currentEditor) {\n          // just re-apply options as they might have changed\n          currentEditor.setOptions(this.options.current);\n        }\n        return;\n      }\n      if (currentEditor && !currentEditor.isDestroyed) {\n        currentEditor.destroy();\n        if (this.instanceId === currentInstanceId) {\n          this.setEditor(null);\n        }\n      }\n      // This allows the effect to run again between ticks\n      // which may save us from having to re-create the editor\n    }, 1);\n  }\n}\nfunction useEditor(options = {}, deps = []) {\n  const mostRecentOptions = useRef(options);\n  mostRecentOptions.current = options;\n  const [instanceManager] = useState(() => new EditorInstanceManager(mostRecentOptions));\n  const editor = shimExports.useSyncExternalStore(instanceManager.subscribe, instanceManager.getEditor, instanceManager.getServerSnapshot);\n  useDebugValue(editor);\n  // This effect will handle creating/updating the editor instance\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(instanceManager.onRender(deps));\n  // The default behavior is to re-render on each transaction\n  // This is legacy behavior that will be removed in future versions\n  useEditorState({\n    editor,\n    selector: ({\n      transactionNumber\n    }) => {\n      if (options.shouldRerenderOnTransaction === false) {\n        // This will prevent the editor from re-rendering on each transaction\n        return null;\n      }\n      // This will avoid re-rendering on the first transaction when `immediatelyRender` is set to `true`\n      if (options.immediatelyRender && transactionNumber === 0) {\n        return 0;\n      }\n      return transactionNumber + 1;\n    }\n  });\n  return editor;\n}\nconst EditorContext = createContext({\n  editor: null\n});\nconst EditorConsumer = EditorContext.Consumer;\n/**\n * A hook to get the current editor instance.\n */\nconst useCurrentEditor = () => useContext(EditorContext);\n/**\n * This is the provider component for the editor.\n * It allows the editor to be accessible across the entire component tree\n * with `useCurrentEditor`.\n */\nfunction EditorProvider({\n  children,\n  slotAfter,\n  slotBefore,\n  ...editorOptions\n}) {\n  const editor = useEditor(editorOptions);\n  if (!editor) {\n    return null;\n  }\n  return React.createElement(EditorContext.Provider, {\n    value: {\n      editor\n    }\n  }, slotBefore, React.createElement(EditorConsumer, null, ({\n    editor: currentEditor\n  }) => React.createElement(EditorContent, {\n    editor: currentEditor\n  })), children, slotAfter);\n}\nconst BubbleMenu = props => {\n  const [element, setElement] = useState(null);\n  const {\n    editor: currentEditor\n  } = useCurrentEditor();\n  useEffect(() => {\n    var _a;\n    if (!element) {\n      return;\n    }\n    if (((_a = props.editor) === null || _a === void 0 ? void 0 : _a.isDestroyed) || (currentEditor === null || currentEditor === void 0 ? void 0 : currentEditor.isDestroyed)) {\n      return;\n    }\n    const {\n      pluginKey = 'bubbleMenu',\n      editor,\n      tippyOptions = {},\n      updateDelay,\n      shouldShow = null\n    } = props;\n    const menuEditor = editor || currentEditor;\n    if (!menuEditor) {\n      console.warn('BubbleMenu component is not rendered inside of an editor component or does not have editor prop.');\n      return;\n    }\n    const plugin = BubbleMenuPlugin({\n      updateDelay,\n      editor: menuEditor,\n      element,\n      pluginKey,\n      shouldShow,\n      tippyOptions\n    });\n    menuEditor.registerPlugin(plugin);\n    return () => menuEditor.unregisterPlugin(pluginKey);\n  }, [props.editor, currentEditor, element]);\n  return React.createElement(\"div\", {\n    ref: setElement,\n    className: props.className,\n    style: {\n      visibility: 'hidden'\n    }\n  }, props.children);\n};\nconst FloatingMenu = props => {\n  const [element, setElement] = useState(null);\n  const {\n    editor: currentEditor\n  } = useCurrentEditor();\n  useEffect(() => {\n    var _a;\n    if (!element) {\n      return;\n    }\n    if (((_a = props.editor) === null || _a === void 0 ? void 0 : _a.isDestroyed) || (currentEditor === null || currentEditor === void 0 ? void 0 : currentEditor.isDestroyed)) {\n      return;\n    }\n    const {\n      pluginKey = 'floatingMenu',\n      editor,\n      tippyOptions = {},\n      shouldShow = null\n    } = props;\n    const menuEditor = editor || currentEditor;\n    if (!menuEditor) {\n      console.warn('FloatingMenu component is not rendered inside of an editor component or does not have editor prop.');\n      return;\n    }\n    const plugin = FloatingMenuPlugin({\n      pluginKey,\n      editor: menuEditor,\n      element,\n      tippyOptions,\n      shouldShow\n    });\n    menuEditor.registerPlugin(plugin);\n    return () => menuEditor.unregisterPlugin(pluginKey);\n  }, [props.editor, currentEditor, element]);\n  return React.createElement(\"div\", {\n    ref: setElement,\n    className: props.className,\n    style: {\n      visibility: 'hidden'\n    }\n  }, props.children);\n};\nconst ReactNodeViewContext = createContext({\n  onDragStart: undefined\n});\nconst useReactNodeView = () => useContext(ReactNodeViewContext);\nconst NodeViewContent = props => {\n  const Tag = props.as || 'div';\n  const {\n    nodeViewContentRef\n  } = useReactNodeView();\n  return (\n    // @ts-ignore\n    React.createElement(Tag, {\n      ...props,\n      ref: nodeViewContentRef,\n      \"data-node-view-content\": \"\",\n      style: {\n        whiteSpace: 'pre-wrap',\n        ...props.style\n      }\n    })\n  );\n};\nconst NodeViewWrapper = React.forwardRef((props, ref) => {\n  const {\n    onDragStart\n  } = useReactNodeView();\n  const Tag = props.as || 'div';\n  return (\n    // @ts-ignore\n    React.createElement(Tag, {\n      ...props,\n      ref: ref,\n      \"data-node-view-wrapper\": \"\",\n      onDragStart: onDragStart,\n      style: {\n        whiteSpace: 'normal',\n        ...props.style\n      }\n    })\n  );\n});\n\n/**\n * Check if a component is a class component.\n * @param Component\n * @returns {boolean}\n */\nfunction isClassComponent(Component) {\n  return !!(typeof Component === 'function' && Component.prototype && Component.prototype.isReactComponent);\n}\n/**\n * Check if a component is a forward ref component.\n * @param Component\n * @returns {boolean}\n */\nfunction isForwardRefComponent(Component) {\n  var _a;\n  return !!(typeof Component === 'object' && ((_a = Component.$$typeof) === null || _a === void 0 ? void 0 : _a.toString()) === 'Symbol(react.forward_ref)');\n}\n/**\n * The ReactRenderer class. It's responsible for rendering React components inside the editor.\n * @example\n * new ReactRenderer(MyComponent, {\n *   editor,\n *   props: {\n *     foo: 'bar',\n *   },\n *   as: 'span',\n * })\n*/\nclass ReactRenderer {\n  constructor(component, {\n    editor,\n    props = {},\n    as = 'div',\n    className = '',\n    attrs\n  }) {\n    this.ref = null;\n    this.id = Math.floor(Math.random() * 0xFFFFFFFF).toString();\n    this.component = component;\n    this.editor = editor;\n    this.props = props;\n    this.element = document.createElement(as);\n    this.element.classList.add('react-renderer');\n    if (className) {\n      this.element.classList.add(...className.split(' '));\n    }\n    if (attrs) {\n      Object.keys(attrs).forEach(key => {\n        this.element.setAttribute(key, attrs[key]);\n      });\n    }\n    if (this.editor.isInitialized) {\n      // On first render, we need to flush the render synchronously\n      // Renders afterwards can be async, but this fixes a cursor positioning issue\n      flushSync(() => {\n        this.render();\n      });\n    } else {\n      this.render();\n    }\n  }\n  render() {\n    var _a;\n    const Component = this.component;\n    const props = this.props;\n    const editor = this.editor;\n    if (isClassComponent(Component) || isForwardRefComponent(Component)) {\n      props.ref = ref => {\n        this.ref = ref;\n      };\n    }\n    this.reactElement = React.createElement(Component, props);\n    (_a = editor === null || editor === void 0 ? void 0 : editor.contentComponent) === null || _a === void 0 ? void 0 : _a.setRenderer(this.id, this);\n  }\n  updateProps(props = {}) {\n    this.props = {\n      ...this.props,\n      ...props\n    };\n    this.render();\n  }\n  destroy() {\n    var _a;\n    const editor = this.editor;\n    (_a = editor === null || editor === void 0 ? void 0 : editor.contentComponent) === null || _a === void 0 ? void 0 : _a.removeRenderer(this.id);\n  }\n}\nclass ReactNodeView extends NodeView {\n  mount() {\n    const props = {\n      editor: this.editor,\n      node: this.node,\n      decorations: this.decorations,\n      selected: false,\n      extension: this.extension,\n      getPos: () => this.getPos(),\n      updateAttributes: (attributes = {}) => this.updateAttributes(attributes),\n      deleteNode: () => this.deleteNode()\n    };\n    if (!this.component.displayName) {\n      const capitalizeFirstChar = string => {\n        return string.charAt(0).toUpperCase() + string.substring(1);\n      };\n      this.component.displayName = capitalizeFirstChar(this.extension.name);\n    }\n    const onDragStart = this.onDragStart.bind(this);\n    const nodeViewContentRef = element => {\n      if (element && this.contentDOMElement && element.firstChild !== this.contentDOMElement) {\n        element.appendChild(this.contentDOMElement);\n      }\n    };\n    const context = {\n      onDragStart,\n      nodeViewContentRef\n    };\n    const Component = this.component;\n    // For performance reasons, we memoize the provider component\n    // And all of the things it requires are declared outside of the component, so it doesn't need to re-render\n    const ReactNodeViewProvider = React.memo(componentProps => {\n      return React.createElement(ReactNodeViewContext.Provider, {\n        value: context\n      }, React.createElement(Component, componentProps));\n    });\n    ReactNodeViewProvider.displayName = 'ReactNodeView';\n    if (this.node.isLeaf) {\n      this.contentDOMElement = null;\n    } else if (this.options.contentDOMElementTag) {\n      this.contentDOMElement = document.createElement(this.options.contentDOMElementTag);\n    } else {\n      this.contentDOMElement = document.createElement(this.node.isInline ? 'span' : 'div');\n    }\n    if (this.contentDOMElement) {\n      // For some reason the whiteSpace prop is not inherited properly in Chrome and Safari\n      // With this fix it seems to work fine\n      // See: https://github.com/ueberdosis/tiptap/issues/1197\n      this.contentDOMElement.style.whiteSpace = 'inherit';\n    }\n    let as = this.node.isInline ? 'span' : 'div';\n    if (this.options.as) {\n      as = this.options.as;\n    }\n    const {\n      className = ''\n    } = this.options;\n    this.handleSelectionUpdate = this.handleSelectionUpdate.bind(this);\n    this.editor.on('selectionUpdate', this.handleSelectionUpdate);\n    this.renderer = new ReactRenderer(ReactNodeViewProvider, {\n      editor: this.editor,\n      props,\n      as,\n      className: `node-${this.node.type.name} ${className}`.trim(),\n      attrs: this.options.attrs\n    });\n  }\n  get dom() {\n    var _a;\n    if (this.renderer.element.firstElementChild && !((_a = this.renderer.element.firstElementChild) === null || _a === void 0 ? void 0 : _a.hasAttribute('data-node-view-wrapper'))) {\n      throw Error('Please use the NodeViewWrapper component for your node view.');\n    }\n    return this.renderer.element;\n  }\n  get contentDOM() {\n    if (this.node.isLeaf) {\n      return null;\n    }\n    return this.contentDOMElement;\n  }\n  handleSelectionUpdate() {\n    const {\n      from,\n      to\n    } = this.editor.state.selection;\n    if (from <= this.getPos() && to >= this.getPos() + this.node.nodeSize) {\n      if (this.renderer.props.selected) {\n        return;\n      }\n      this.selectNode();\n    } else {\n      if (!this.renderer.props.selected) {\n        return;\n      }\n      this.deselectNode();\n    }\n  }\n  update(node, decorations) {\n    const updateProps = props => {\n      this.renderer.updateProps(props);\n    };\n    if (node.type !== this.node.type) {\n      return false;\n    }\n    if (typeof this.options.update === 'function') {\n      const oldNode = this.node;\n      const oldDecorations = this.decorations;\n      this.node = node;\n      this.decorations = decorations;\n      return this.options.update({\n        oldNode,\n        oldDecorations,\n        newNode: node,\n        newDecorations: decorations,\n        updateProps: () => updateProps({\n          node,\n          decorations\n        })\n      });\n    }\n    if (node === this.node && this.decorations === decorations) {\n      return true;\n    }\n    this.node = node;\n    this.decorations = decorations;\n    updateProps({\n      node,\n      decorations\n    });\n    return true;\n  }\n  selectNode() {\n    this.renderer.updateProps({\n      selected: true\n    });\n    this.renderer.element.classList.add('ProseMirror-selectednode');\n  }\n  deselectNode() {\n    this.renderer.updateProps({\n      selected: false\n    });\n    this.renderer.element.classList.remove('ProseMirror-selectednode');\n  }\n  destroy() {\n    this.renderer.destroy();\n    this.editor.off('selectionUpdate', this.handleSelectionUpdate);\n    this.contentDOMElement = null;\n  }\n}\nfunction ReactNodeViewRenderer(component, options) {\n  return props => {\n    // try to get the parent component\n    // this is important for vue devtools to show the component hierarchy correctly\n    // maybe it’s `undefined` because <editor-content> isn’t rendered yet\n    if (!props.editor.contentComponent) {\n      return {};\n    }\n    return new ReactNodeView(component, props, options);\n  };\n}\nexport { BubbleMenu, EditorConsumer, EditorContent, EditorContext, EditorProvider, FloatingMenu, NodeViewContent, NodeViewWrapper, PureEditorContent, ReactNodeViewContext, ReactNodeViewRenderer, ReactRenderer, useCurrentEditor, useEditor, useEditorState, useReactNodeView };","map":{"version":3,"names":["e","React","h","a","b","k","Object","is","l","useState","m","useEffect","n","useLayoutEffect","p","useDebugValue","q","d","f","inst","value","getSnapshot","c","g","r","t","u","window","document","createElement","useSyncExternalStoreShim_production_min","useSyncExternalStore","process","env","NODE_ENV","__REACT_DEVTOOLS_GLOBAL_HOOK__","registerInternalModuleStart","Error","React$1","ReactSharedInternals","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","error","format","_len2","arguments","length","args","Array","_key2","printWarning","level","ReactDebugCurrentFrame","stack","getStackAddendum","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","x","y","objectIs","didWarnOld18Alpha","didWarnUncachedGetSnapshot","subscribe","getServerSnapshot","startTransition","undefined","cachedValue","_useState","forceUpdate","checkIfSnapshotChanged","handleStoreChange","latestGetSnapshot","prevValue","nextValue","useSyncExternalStore$1","canUseDOM","isServerEnvironment","shim","useSyncExternalStore$2","useSyncExternalStoreShim_development","registerInternalModuleStop","exports","requireUseSyncExternalStoreShim_production_min","requireUseSyncExternalStoreShim_development","mergeRefs","refs","node","forEach","ref","current","Portals","contentComponent","renderers","shimExports","Fragment","values","getInstance","subscribers","Set","callback","add","delete","setRenderer","id","renderer","ReactDOM","createPortal","reactElement","element","subscriber","removeRenderer","nextRenderers","PureEditorContent","Component","constructor","props","editorContentRef","createRef","initialized","state","hasContentComponentInitialized","Boolean","_a","editor","componentDidMount","init","componentDidUpdate","isDestroyed","options","append","childNodes","setOptions","unsubscribeToContentComponent","setState","prevState","createNodeViews","componentWillUnmount","view","setProps","nodeViews","firstChild","newElement","render","innerRef","rest","EditorContentWithKey","forwardRef","key","useMemo","Math","floor","random","toString","EditorContent","memo","useRef","v","w","withSelector_production_min","useSyncExternalStoreWithSelector","hasValue","selector","isEqual","instRef","_useMemo","hasMemo","memoizedSnapshot","memoizedSelection","memoizedSelector","nextSnapshot","_nextSelection","currentSelection","prevSnapshot","prevSelection","nextSelection","maybeGetServerSnapshot","getSnapshotWithSelector","getServerSnapshotWithSelector","getSelection","getServerSelection","withSelector_development","withSelector","requireWithSelector_production_min","requireWithSelector_development","EditorStateManager","initialEditor","transactionNumber","lastTransactionNumber","lastSnapshot","bind","watch","nextEditor","fn","currentEditor","on","off","useEditorState","editorInstance","selectedState","withSelectorExports","equalityFn","isDev","isSSR","isNext","next","EditorInstanceManager","subscriptions","isComponentMounted","previousDeps","instanceId","setEditor","getInitialEditor","scheduleDestroy","getEditor","refreshEditorInstance","onRender","createEditor","slice","cb","immediatelyRender","warn","optionsToApply","onBeforeCreate","_b","onBlur","onCreate","onDestroy","onFocus","onSelectionUpdate","onTransaction","onUpdate","onContentError","Editor","onStoreChange","deps","clearTimeout","scheduledDestructionTimeout","depsAreEqual","every","dep","index","destroy","currentInstanceId","setTimeout","useEditor","mostRecentOptions","instanceManager","shouldRerenderOnTransaction","EditorContext","createContext","EditorConsumer","Consumer","useCurrentEditor","useContext","EditorProvider","children","slotAfter","slotBefore","editorOptions","Provider","BubbleMenu","setElement","pluginKey","tippyOptions","updateDelay","shouldShow","menuEditor","plugin","BubbleMenuPlugin","registerPlugin","unregisterPlugin","className","style","visibility","FloatingMenu","FloatingMenuPlugin","ReactNodeViewContext","onDragStart","useReactNodeView","NodeViewContent","Tag","as","nodeViewContentRef","whiteSpace","NodeViewWrapper","isClassComponent","isReactComponent","isForwardRefComponent","$$typeof","ReactRenderer","component","attrs","classList","split","keys","setAttribute","isInitialized","flushSync","updateProps","ReactNodeView","NodeView","mount","decorations","selected","extension","getPos","updateAttributes","attributes","deleteNode","displayName","capitalizeFirstChar","string","charAt","toUpperCase","substring","name","contentDOMElement","appendChild","context","ReactNodeViewProvider","componentProps","isLeaf","contentDOMElementTag","isInline","handleSelectionUpdate","type","trim","dom","firstElementChild","hasAttribute","contentDOM","from","to","selection","nodeSize","selectNode","deselectNode","update","oldNode","oldDecorations","newNode","newDecorations","remove","ReactNodeViewRenderer"],"sources":["/Users/madhusudhan/Desktop/multiple-questions/node_modules/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","/Users/madhusudhan/Desktop/multiple-questions/node_modules/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js","/Users/madhusudhan/Desktop/multiple-questions/node_modules/node_modules/use-sync-external-store/shim/index.js","/Users/madhusudhan/Desktop/multiple-questions/node_modules/@tiptap/react/src/EditorContent.tsx","/Users/madhusudhan/Desktop/multiple-questions/node_modules/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js","/Users/madhusudhan/Desktop/multiple-questions/node_modules/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js","/Users/madhusudhan/Desktop/multiple-questions/node_modules/node_modules/use-sync-external-store/shim/with-selector.js","/Users/madhusudhan/Desktop/multiple-questions/node_modules/@tiptap/react/src/useEditorState.ts","/Users/madhusudhan/Desktop/multiple-questions/node_modules/@tiptap/react/src/useEditor.ts","/Users/madhusudhan/Desktop/multiple-questions/node_modules/@tiptap/react/src/Context.tsx","/Users/madhusudhan/Desktop/multiple-questions/node_modules/@tiptap/react/src/BubbleMenu.tsx","/Users/madhusudhan/Desktop/multiple-questions/node_modules/@tiptap/react/src/FloatingMenu.tsx","/Users/madhusudhan/Desktop/multiple-questions/node_modules/@tiptap/react/src/useReactNodeView.ts","/Users/madhusudhan/Desktop/multiple-questions/node_modules/@tiptap/react/src/NodeViewContent.tsx","/Users/madhusudhan/Desktop/multiple-questions/node_modules/@tiptap/react/src/NodeViewWrapper.tsx","/Users/madhusudhan/Desktop/multiple-questions/node_modules/@tiptap/react/src/ReactRenderer.tsx","/Users/madhusudhan/Desktop/multiple-questions/node_modules/@tiptap/react/src/ReactNodeViewRenderer.tsx"],"sourcesContent":["/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n// dispatch for CommonJS interop named imports.\n\nvar useState = React.useState,\n    useEffect = React.useEffect,\n    useLayoutEffect = React.useLayoutEffect,\n    useDebugValue = React.useDebugValue;\nvar didWarnOld18Alpha = false;\nvar didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  {\n    if (!didWarnOld18Alpha) {\n      if (React.startTransition !== undefined) {\n        didWarnOld18Alpha = true;\n\n        error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  var value = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedValue = getSnapshot();\n\n      if (!objectIs(value, cachedValue)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  var _useState = useState({\n    inst: {\n      value: value,\n      getSnapshot: getSnapshot\n    }\n  }),\n      inst = _useState[0].inst,\n      forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n\n  useLayoutEffect(function () {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n  }, [subscribe, value, getSnapshot]);\n  useEffect(function () {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n\n    var handleStoreChange = function () {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst: inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n\nvar isServerEnvironment = !canUseDOM;\n\nvar shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\nvar useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n\nexports.useSyncExternalStore = useSyncExternalStore$2;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","import { Editor } from '@tiptap/core'\nimport React, {\n  ForwardedRef, forwardRef, HTMLProps, LegacyRef, MutableRefObject,\n} from 'react'\nimport ReactDOM from 'react-dom'\nimport { useSyncExternalStore } from 'use-sync-external-store/shim'\n\nimport { ContentComponent, EditorWithContentComponent } from './Editor.js'\nimport { ReactRenderer } from './ReactRenderer.js'\n\nconst mergeRefs = <T extends HTMLDivElement>(\n  ...refs: Array<MutableRefObject<T> | LegacyRef<T> | undefined>\n) => {\n  return (node: T) => {\n    refs.forEach(ref => {\n      if (typeof ref === 'function') {\n        ref(node)\n      } else if (ref) {\n        (ref as MutableRefObject<T | null>).current = node\n      }\n    })\n  }\n}\n\n/**\n * This component renders all of the editor's node views.\n */\nconst Portals: React.FC<{ contentComponent: ContentComponent }> = ({\n  contentComponent,\n}) => {\n  // For performance reasons, we render the node view portals on state changes only\n  const renderers = useSyncExternalStore(\n    contentComponent.subscribe,\n    contentComponent.getSnapshot,\n    contentComponent.getServerSnapshot,\n  )\n\n  // This allows us to directly render the portals without any additional wrapper\n  return (\n    <>\n      {Object.values(renderers)}\n    </>\n  )\n}\n\nexport interface EditorContentProps extends HTMLProps<HTMLDivElement> {\n  editor: Editor | null;\n  innerRef?: ForwardedRef<HTMLDivElement | null>;\n}\n\nfunction getInstance(): ContentComponent {\n  const subscribers = new Set<() => void>()\n  let renderers: Record<string, React.ReactPortal> = {}\n\n  return {\n    /**\n     * Subscribe to the editor instance's changes.\n     */\n    subscribe(callback: () => void) {\n      subscribers.add(callback)\n      return () => {\n        subscribers.delete(callback)\n      }\n    },\n    getSnapshot() {\n      return renderers\n    },\n    getServerSnapshot() {\n      return renderers\n    },\n    /**\n     * Adds a new NodeView Renderer to the editor.\n     */\n    setRenderer(id: string, renderer: ReactRenderer) {\n      renderers = {\n        ...renderers,\n        [id]: ReactDOM.createPortal(renderer.reactElement, renderer.element, id),\n      }\n\n      subscribers.forEach(subscriber => subscriber())\n    },\n    /**\n     * Removes a NodeView Renderer from the editor.\n     */\n    removeRenderer(id: string) {\n      const nextRenderers = { ...renderers }\n\n      delete nextRenderers[id]\n      renderers = nextRenderers\n      subscribers.forEach(subscriber => subscriber())\n    },\n  }\n}\n\nexport class PureEditorContent extends React.Component<\n  EditorContentProps,\n  { hasContentComponentInitialized: boolean }\n> {\n  editorContentRef: React.RefObject<any>\n\n  initialized: boolean\n\n  unsubscribeToContentComponent?: () => void\n\n  constructor(props: EditorContentProps) {\n    super(props)\n    this.editorContentRef = React.createRef()\n    this.initialized = false\n\n    this.state = {\n      hasContentComponentInitialized: Boolean((props.editor as EditorWithContentComponent | null)?.contentComponent),\n    }\n  }\n\n  componentDidMount() {\n    this.init()\n  }\n\n  componentDidUpdate() {\n    this.init()\n  }\n\n  init() {\n    const editor = this.props.editor as EditorWithContentComponent | null\n\n    if (editor && !editor.isDestroyed && editor.options.element) {\n      if (editor.contentComponent) {\n        return\n      }\n\n      const element = this.editorContentRef.current\n\n      element.append(...editor.options.element.childNodes)\n\n      editor.setOptions({\n        element,\n      })\n\n      editor.contentComponent = getInstance()\n\n      // Has the content component been initialized?\n      if (!this.state.hasContentComponentInitialized) {\n        // Subscribe to the content component\n        this.unsubscribeToContentComponent = editor.contentComponent.subscribe(() => {\n          this.setState(prevState => {\n            if (!prevState.hasContentComponentInitialized) {\n              return {\n                hasContentComponentInitialized: true,\n              }\n            }\n            return prevState\n          })\n\n          // Unsubscribe to previous content component\n          if (this.unsubscribeToContentComponent) {\n            this.unsubscribeToContentComponent()\n          }\n        })\n      }\n\n      editor.createNodeViews()\n\n      this.initialized = true\n    }\n  }\n\n  componentWillUnmount() {\n    const editor = this.props.editor as EditorWithContentComponent | null\n\n    if (!editor) {\n      return\n    }\n\n    this.initialized = false\n\n    if (!editor.isDestroyed) {\n      editor.view.setProps({\n        nodeViews: {},\n      })\n    }\n\n    if (this.unsubscribeToContentComponent) {\n      this.unsubscribeToContentComponent()\n    }\n\n    editor.contentComponent = null\n\n    if (!editor.options.element.firstChild) {\n      return\n    }\n\n    const newElement = document.createElement('div')\n\n    newElement.append(...editor.options.element.childNodes)\n\n    editor.setOptions({\n      element: newElement,\n    })\n  }\n\n  render() {\n    const { editor, innerRef, ...rest } = this.props\n\n    return (\n      <>\n        <div ref={mergeRefs(innerRef, this.editorContentRef)} {...rest} />\n        {/* @ts-ignore */}\n        {editor?.contentComponent && <Portals contentComponent={editor.contentComponent} />}\n      </>\n    )\n  }\n}\n\n// EditorContent should be re-created whenever the Editor instance changes\nconst EditorContentWithKey = forwardRef<HTMLDivElement, EditorContentProps>(\n  (props: Omit<EditorContentProps, 'innerRef'>, ref) => {\n    const key = React.useMemo(() => {\n      return Math.floor(Math.random() * 0xffffffff).toString()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.editor])\n\n    // Can't use JSX here because it conflicts with the type definition of Vue's JSX, so use createElement\n    return React.createElement(PureEditorContent, {\n      key,\n      innerRef: ref,\n      ...props,\n    })\n  },\n)\n\nexport const EditorContent = React.memo(EditorContentWithKey)\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var h=require(\"react\"),n=require(\"use-sync-external-store/shim\");function p(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var q=\"function\"===typeof Object.is?Object.is:p,r=n.useSyncExternalStore,t=h.useRef,u=h.useEffect,v=h.useMemo,w=h.useDebugValue;\nexports.useSyncExternalStoreWithSelector=function(a,b,e,l,g){var c=t(null);if(null===c.current){var f={hasValue:!1,value:null};c.current=f}else f=c.current;c=v(function(){function a(a){if(!c){c=!0;d=a;a=l(a);if(void 0!==g&&f.hasValue){var b=f.value;if(g(b,a))return k=b}return k=a}b=k;if(q(d,a))return b;var e=l(a);if(void 0!==g&&g(b,e))return b;d=a;return k=e}var c=!1,d,k,m=void 0===e?null:e;return[function(){return a(b())},null===m?void 0:function(){return a(m())}]},[b,e,l,g]);var d=r(a,c[0],c[1]);\nu(function(){f.hasValue=!0;f.value=d},[d]);w(d);return d};\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\nvar shim = require('use-sync-external-store/shim');\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\nvar useSyncExternalStore = shim.useSyncExternalStore;\n\n// for CommonJS interop.\n\nvar useRef = React.useRef,\n    useEffect = React.useEffect,\n    useMemo = React.useMemo,\n    useDebugValue = React.useDebugValue; // Same as useSyncExternalStore, but supports selector and isEqual arguments.\n\nfunction useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {\n  // Use this to track the rendered snapshot.\n  var instRef = useRef(null);\n  var inst;\n\n  if (instRef.current === null) {\n    inst = {\n      hasValue: false,\n      value: null\n    };\n    instRef.current = inst;\n  } else {\n    inst = instRef.current;\n  }\n\n  var _useMemo = useMemo(function () {\n    // Track the memoized state using closure variables that are local to this\n    // memoized instance of a getSnapshot function. Intentionally not using a\n    // useRef hook, because that state would be shared across all concurrent\n    // copies of the hook/component.\n    var hasMemo = false;\n    var memoizedSnapshot;\n    var memoizedSelection;\n\n    var memoizedSelector = function (nextSnapshot) {\n      if (!hasMemo) {\n        // The first time the hook is called, there is no memoized result.\n        hasMemo = true;\n        memoizedSnapshot = nextSnapshot;\n\n        var _nextSelection = selector(nextSnapshot);\n\n        if (isEqual !== undefined) {\n          // Even if the selector has changed, the currently rendered selection\n          // may be equal to the new selection. We should attempt to reuse the\n          // current value if possible, to preserve downstream memoizations.\n          if (inst.hasValue) {\n            var currentSelection = inst.value;\n\n            if (isEqual(currentSelection, _nextSelection)) {\n              memoizedSelection = currentSelection;\n              return currentSelection;\n            }\n          }\n        }\n\n        memoizedSelection = _nextSelection;\n        return _nextSelection;\n      } // We may be able to reuse the previous invocation's result.\n\n\n      // We may be able to reuse the previous invocation's result.\n      var prevSnapshot = memoizedSnapshot;\n      var prevSelection = memoizedSelection;\n\n      if (objectIs(prevSnapshot, nextSnapshot)) {\n        // The snapshot is the same as last time. Reuse the previous selection.\n        return prevSelection;\n      } // The snapshot has changed, so we need to compute a new selection.\n\n\n      // The snapshot has changed, so we need to compute a new selection.\n      var nextSelection = selector(nextSnapshot); // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n\n      // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n      if (isEqual !== undefined && isEqual(prevSelection, nextSelection)) {\n        return prevSelection;\n      }\n\n      memoizedSnapshot = nextSnapshot;\n      memoizedSelection = nextSelection;\n      return nextSelection;\n    }; // Assigning this to a constant so that Flow knows it can't change.\n\n\n    // Assigning this to a constant so that Flow knows it can't change.\n    var maybeGetServerSnapshot = getServerSnapshot === undefined ? null : getServerSnapshot;\n\n    var getSnapshotWithSelector = function () {\n      return memoizedSelector(getSnapshot());\n    };\n\n    var getServerSnapshotWithSelector = maybeGetServerSnapshot === null ? undefined : function () {\n      return memoizedSelector(maybeGetServerSnapshot());\n    };\n    return [getSnapshotWithSelector, getServerSnapshotWithSelector];\n  }, [getSnapshot, getServerSnapshot, selector, isEqual]),\n      getSelection = _useMemo[0],\n      getServerSelection = _useMemo[1];\n\n  var value = useSyncExternalStore(subscribe, getSelection, getServerSelection);\n  useEffect(function () {\n    inst.hasValue = true;\n    inst.value = value;\n  }, [value]);\n  useDebugValue(value);\n  return value;\n}\n\nexports.useSyncExternalStoreWithSelector = useSyncExternalStoreWithSelector;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","import type { Editor } from '@tiptap/core'\nimport { useDebugValue, useEffect, useState } from 'react'\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector'\n\nexport type EditorStateSnapshot<TEditor extends Editor | null = Editor | null> = {\n  editor: TEditor;\n  transactionNumber: number;\n};\nexport type UseEditorStateOptions<\n  TSelectorResult,\n  TEditor extends Editor | null = Editor | null,\n> = {\n  /**\n   * The editor instance.\n   */\n  editor: TEditor;\n  /**\n   * A selector function to determine the value to compare for re-rendering.\n   */\n  selector: (context: EditorStateSnapshot<TEditor>) => TSelectorResult;\n  /**\n   * A custom equality function to determine if the editor should re-render.\n   * @default `(a, b) => a === b`\n   */\n  equalityFn?: (a: TSelectorResult, b: TSelectorResult | null) => boolean;\n};\n\n/**\n * To synchronize the editor instance with the component state,\n * we need to create a separate instance that is not affected by the component re-renders.\n */\nclass EditorStateManager<TEditor extends Editor | null = Editor | null> {\n  private transactionNumber = 0\n\n  private lastTransactionNumber = 0\n\n  private lastSnapshot: EditorStateSnapshot<TEditor>\n\n  private editor: TEditor\n\n  private subscribers = new Set<() => void>()\n\n  constructor(initialEditor: TEditor) {\n    this.editor = initialEditor\n    this.lastSnapshot = { editor: initialEditor, transactionNumber: 0 }\n\n    this.getSnapshot = this.getSnapshot.bind(this)\n    this.getServerSnapshot = this.getServerSnapshot.bind(this)\n    this.watch = this.watch.bind(this)\n    this.subscribe = this.subscribe.bind(this)\n  }\n\n  /**\n   * Get the current editor instance.\n   */\n  getSnapshot(): EditorStateSnapshot<TEditor> {\n    if (this.transactionNumber === this.lastTransactionNumber) {\n      return this.lastSnapshot\n    }\n    this.lastTransactionNumber = this.transactionNumber\n    this.lastSnapshot = { editor: this.editor, transactionNumber: this.transactionNumber }\n    return this.lastSnapshot\n  }\n\n  /**\n   * Always disable the editor on the server-side.\n   */\n  getServerSnapshot(): EditorStateSnapshot<null> {\n    return { editor: null, transactionNumber: 0 }\n  }\n\n  /**\n   * Subscribe to the editor instance's changes.\n   */\n  subscribe(callback: () => void): () => void {\n    this.subscribers.add(callback)\n    return () => {\n      this.subscribers.delete(callback)\n    }\n  }\n\n  /**\n   * Watch the editor instance for changes.\n   */\n  watch(nextEditor: Editor | null): undefined | (() => void) {\n    this.editor = nextEditor as TEditor\n\n    if (this.editor) {\n      /**\n       * This will force a re-render when the editor state changes.\n       * This is to support things like `editor.can().toggleBold()` in components that `useEditor`.\n       * This could be more efficient, but it's a good trade-off for now.\n       */\n      const fn = () => {\n        this.transactionNumber += 1\n        this.subscribers.forEach(callback => callback())\n      }\n\n      const currentEditor = this.editor\n\n      currentEditor.on('transaction', fn)\n      return () => {\n        currentEditor.off('transaction', fn)\n      }\n    }\n\n    return undefined\n  }\n}\n\nexport function useEditorState<TSelectorResult>(\n  options: UseEditorStateOptions<TSelectorResult, Editor>\n): TSelectorResult;\nexport function useEditorState<TSelectorResult>(\n  options: UseEditorStateOptions<TSelectorResult, Editor | null>\n): TSelectorResult | null;\n\nexport function useEditorState<TSelectorResult>(\n  options: UseEditorStateOptions<TSelectorResult, Editor> | UseEditorStateOptions<TSelectorResult, Editor | null>,\n): TSelectorResult | null {\n  const [editorInstance] = useState(() => new EditorStateManager(options.editor))\n\n  // Using the `useSyncExternalStore` hook to sync the editor instance with the component state\n  const selectedState = useSyncExternalStoreWithSelector(\n    editorInstance.subscribe,\n    editorInstance.getSnapshot,\n    editorInstance.getServerSnapshot,\n    options.selector as UseEditorStateOptions<TSelectorResult, Editor | null>['selector'],\n    options.equalityFn,\n  )\n\n  useEffect(() => {\n    return editorInstance.watch(options.editor)\n  }, [options.editor, editorInstance])\n\n  useDebugValue(selectedState)\n\n  return selectedState\n}\n","import { type EditorOptions, Editor } from '@tiptap/core'\nimport {\n  DependencyList,\n  MutableRefObject,\n  useDebugValue,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport { useSyncExternalStore } from 'use-sync-external-store/shim'\n\nimport { useEditorState } from './useEditorState.js'\n\nconst isDev = process.env.NODE_ENV !== 'production'\nconst isSSR = typeof window === 'undefined'\nconst isNext = isSSR || Boolean(typeof window !== 'undefined' && (window as any).next)\n\n/**\n * The options for the `useEditor` hook.\n */\nexport type UseEditorOptions = Partial<EditorOptions> & {\n  /**\n   * Whether to render the editor on the first render.\n   * If client-side rendering, set this to `true`.\n   * If server-side rendering, set this to `false`.\n   * @default true\n   */\n  immediatelyRender?: boolean;\n  /**\n   * Whether to re-render the editor on each transaction.\n   * This is legacy behavior that will be removed in future versions.\n   * @default true\n   */\n  shouldRerenderOnTransaction?: boolean;\n};\n\n/**\n * This class handles the creation, destruction, and re-creation of the editor instance.\n */\nclass EditorInstanceManager {\n  /**\n   * The current editor instance.\n   */\n  private editor: Editor | null = null\n\n  /**\n   * The most recent options to apply to the editor.\n   */\n  private options: MutableRefObject<UseEditorOptions>\n\n  /**\n   * The subscriptions to notify when the editor instance\n   * has been created or destroyed.\n   */\n  private subscriptions = new Set<() => void>()\n\n  /**\n   * A timeout to destroy the editor if it was not mounted within a time frame.\n   */\n  private scheduledDestructionTimeout: ReturnType<typeof setTimeout> | undefined\n\n  /**\n   * Whether the editor has been mounted.\n   */\n  private isComponentMounted = false\n\n  /**\n   * The most recent dependencies array.\n   */\n  private previousDeps: DependencyList | null = null\n\n  /**\n   * The unique instance ID. This is used to identify the editor instance. And will be re-generated for each new instance.\n   */\n  public instanceId = ''\n\n  constructor(options: MutableRefObject<UseEditorOptions>) {\n    this.options = options\n    this.subscriptions = new Set<() => void>()\n    this.setEditor(this.getInitialEditor())\n    this.scheduleDestroy()\n\n    this.getEditor = this.getEditor.bind(this)\n    this.getServerSnapshot = this.getServerSnapshot.bind(this)\n    this.subscribe = this.subscribe.bind(this)\n    this.refreshEditorInstance = this.refreshEditorInstance.bind(this)\n    this.scheduleDestroy = this.scheduleDestroy.bind(this)\n    this.onRender = this.onRender.bind(this)\n    this.createEditor = this.createEditor.bind(this)\n  }\n\n  private setEditor(editor: Editor | null) {\n    this.editor = editor\n    this.instanceId = Math.random().toString(36).slice(2, 9)\n\n    // Notify all subscribers that the editor instance has been created\n    this.subscriptions.forEach(cb => cb())\n  }\n\n  private getInitialEditor() {\n    if (this.options.current.immediatelyRender === undefined) {\n      if (isSSR || isNext) {\n        // TODO in the next major release, we should throw an error here\n        if (isDev) {\n          /**\n           * Throw an error in development, to make sure the developer is aware that tiptap cannot be SSR'd\n           * and that they need to set `immediatelyRender` to `false` to avoid hydration mismatches.\n           */\n          console.warn(\n            'Tiptap Error: SSR has been detected, please set `immediatelyRender` explicitly to `false` to avoid hydration mismatches.',\n          )\n        }\n\n        // Best faith effort in production, run the code in the legacy mode to avoid hydration mismatches and errors in production\n        return null\n      }\n\n      // Default to immediately rendering when client-side rendering\n      return this.createEditor()\n    }\n\n    if (this.options.current.immediatelyRender && isSSR && isDev) {\n      // Warn in development, to make sure the developer is aware that tiptap cannot be SSR'd, set `immediatelyRender` to `false` to avoid hydration mismatches.\n      throw new Error(\n        'Tiptap Error: SSR has been detected, and `immediatelyRender` has been set to `true` this is an unsupported configuration that may result in errors, explicitly set `immediatelyRender` to `false` to avoid hydration mismatches.',\n      )\n    }\n\n    if (this.options.current.immediatelyRender) {\n      return this.createEditor()\n    }\n\n    return null\n  }\n\n  /**\n   * Create a new editor instance. And attach event listeners.\n   */\n  private createEditor(): Editor {\n    const optionsToApply: Partial<EditorOptions> = {\n      ...this.options.current,\n      // Always call the most recent version of the callback function by default\n      onBeforeCreate: (...args) => this.options.current.onBeforeCreate?.(...args),\n      onBlur: (...args) => this.options.current.onBlur?.(...args),\n      onCreate: (...args) => this.options.current.onCreate?.(...args),\n      onDestroy: (...args) => this.options.current.onDestroy?.(...args),\n      onFocus: (...args) => this.options.current.onFocus?.(...args),\n      onSelectionUpdate: (...args) => this.options.current.onSelectionUpdate?.(...args),\n      onTransaction: (...args) => this.options.current.onTransaction?.(...args),\n      onUpdate: (...args) => this.options.current.onUpdate?.(...args),\n      onContentError: (...args) => this.options.current.onContentError?.(...args),\n    }\n    const editor = new Editor(optionsToApply)\n\n    // no need to keep track of the event listeners, they will be removed when the editor is destroyed\n\n    return editor\n  }\n\n  /**\n   * Get the current editor instance.\n   */\n  getEditor(): Editor | null {\n    return this.editor\n  }\n\n  /**\n   * Always disable the editor on the server-side.\n   */\n  getServerSnapshot(): null {\n    return null\n  }\n\n  /**\n   * Subscribe to the editor instance's changes.\n   */\n  subscribe(onStoreChange: () => void) {\n    this.subscriptions.add(onStoreChange)\n\n    return () => {\n      this.subscriptions.delete(onStoreChange)\n    }\n  }\n\n  /**\n   * On each render, we will create, update, or destroy the editor instance.\n   * @param deps The dependencies to watch for changes\n   * @returns A cleanup function\n   */\n  onRender(deps: DependencyList) {\n    // The returned callback will run on each render\n    return () => {\n      this.isComponentMounted = true\n      // Cleanup any scheduled destructions, since we are currently rendering\n      clearTimeout(this.scheduledDestructionTimeout)\n\n      if (this.editor && !this.editor.isDestroyed && deps.length === 0) {\n        // if the editor does exist & deps are empty, we don't need to re-initialize the editor\n        // we can fast-path to update the editor options on the existing instance\n        this.editor.setOptions(this.options.current)\n      } else {\n        // When the editor:\n        // - does not yet exist\n        // - is destroyed\n        // - the deps array changes\n        // We need to destroy the editor instance and re-initialize it\n        this.refreshEditorInstance(deps)\n      }\n\n      return () => {\n        this.isComponentMounted = false\n        this.scheduleDestroy()\n      }\n    }\n  }\n\n  /**\n   * Recreate the editor instance if the dependencies have changed.\n   */\n  private refreshEditorInstance(deps: DependencyList) {\n    if (this.editor && !this.editor.isDestroyed) {\n      // Editor instance already exists\n      if (this.previousDeps === null) {\n        // If lastDeps has not yet been initialized, reuse the current editor instance\n        this.previousDeps = deps\n        return\n      }\n      const depsAreEqual = this.previousDeps.length === deps.length\n        && this.previousDeps.every((dep, index) => dep === deps[index])\n\n      if (depsAreEqual) {\n        // deps exist and are equal, no need to recreate\n        return\n      }\n    }\n\n    if (this.editor && !this.editor.isDestroyed) {\n      // Destroy the editor instance if it exists\n      this.editor.destroy()\n    }\n\n    this.setEditor(this.createEditor())\n\n    // Update the lastDeps to the current deps\n    this.previousDeps = deps\n  }\n\n  /**\n   * Schedule the destruction of the editor instance.\n   * This will only destroy the editor if it was not mounted on the next tick.\n   * This is to avoid destroying the editor instance when it's actually still mounted.\n   */\n  private scheduleDestroy() {\n    const currentInstanceId = this.instanceId\n    const currentEditor = this.editor\n\n    // Wait two ticks to see if the component is still mounted\n    this.scheduledDestructionTimeout = setTimeout(() => {\n      if (this.isComponentMounted && this.instanceId === currentInstanceId) {\n        // If still mounted on the following tick, with the same instanceId, do not destroy the editor\n        if (currentEditor) {\n          // just re-apply options as they might have changed\n          currentEditor.setOptions(this.options.current)\n        }\n        return\n      }\n      if (currentEditor && !currentEditor.isDestroyed) {\n        currentEditor.destroy()\n        if (this.instanceId === currentInstanceId) {\n          this.setEditor(null)\n        }\n      }\n      // This allows the effect to run again between ticks\n      // which may save us from having to re-create the editor\n    }, 1)\n  }\n}\n\n/**\n * This hook allows you to create an editor instance.\n * @param options The editor options\n * @param deps The dependencies to watch for changes\n * @returns The editor instance\n * @example const editor = useEditor({ extensions: [...] })\n */\nexport function useEditor(\n  options: UseEditorOptions & { immediatelyRender: true },\n  deps?: DependencyList\n): Editor;\n\n/**\n * This hook allows you to create an editor instance.\n * @param options The editor options\n * @param deps The dependencies to watch for changes\n * @returns The editor instance\n * @example const editor = useEditor({ extensions: [...] })\n */\nexport function useEditor(options?: UseEditorOptions, deps?: DependencyList): Editor | null;\n\nexport function useEditor(\n  options: UseEditorOptions = {},\n  deps: DependencyList = [],\n): Editor | null {\n  const mostRecentOptions = useRef(options)\n\n  mostRecentOptions.current = options\n\n  const [instanceManager] = useState(() => new EditorInstanceManager(mostRecentOptions))\n\n  const editor = useSyncExternalStore(\n    instanceManager.subscribe,\n    instanceManager.getEditor,\n    instanceManager.getServerSnapshot,\n  )\n\n  useDebugValue(editor)\n\n  // This effect will handle creating/updating the editor instance\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(instanceManager.onRender(deps))\n\n  // The default behavior is to re-render on each transaction\n  // This is legacy behavior that will be removed in future versions\n  useEditorState({\n    editor,\n    selector: ({ transactionNumber }) => {\n      if (options.shouldRerenderOnTransaction === false) {\n        // This will prevent the editor from re-rendering on each transaction\n        return null\n      }\n\n      // This will avoid re-rendering on the first transaction when `immediatelyRender` is set to `true`\n      if (options.immediatelyRender && transactionNumber === 0) {\n        return 0\n      }\n      return transactionNumber + 1\n    },\n  })\n\n  return editor\n}\n","import { Editor } from '@tiptap/core'\nimport React, { createContext, ReactNode, useContext } from 'react'\n\nimport { EditorContent } from './EditorContent.js'\nimport { useEditor, UseEditorOptions } from './useEditor.js'\n\nexport type EditorContextValue = {\n  editor: Editor | null;\n}\n\nexport const EditorContext = createContext<EditorContextValue>({\n  editor: null,\n})\n\nexport const EditorConsumer = EditorContext.Consumer\n\n/**\n * A hook to get the current editor instance.\n */\nexport const useCurrentEditor = () => useContext(EditorContext)\n\nexport type EditorProviderProps = {\n  children?: ReactNode;\n  slotBefore?: ReactNode;\n  slotAfter?: ReactNode;\n} & UseEditorOptions\n\n/**\n * This is the provider component for the editor.\n * It allows the editor to be accessible across the entire component tree\n * with `useCurrentEditor`.\n */\nexport function EditorProvider({\n  children, slotAfter, slotBefore, ...editorOptions\n}: EditorProviderProps) {\n  const editor = useEditor(editorOptions)\n\n  if (!editor) {\n    return null\n  }\n\n  return (\n    <EditorContext.Provider value={{ editor }}>\n      {slotBefore}\n      <EditorConsumer>\n        {({ editor: currentEditor }) => (\n          <EditorContent editor={currentEditor} />\n        )}\n      </EditorConsumer>\n      {children}\n      {slotAfter}\n    </EditorContext.Provider>\n  )\n}\n","import { BubbleMenuPlugin, BubbleMenuPluginProps } from '@tiptap/extension-bubble-menu'\nimport React, { useEffect, useState } from 'react'\n\nimport { useCurrentEditor } from './Context.js'\n\ntype Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;\n\nexport type BubbleMenuProps = Omit<Optional<BubbleMenuPluginProps, 'pluginKey'>, 'element' | 'editor'> & {\n  editor: BubbleMenuPluginProps['editor'] | null;\n  className?: string;\n  children: React.ReactNode;\n  updateDelay?: number;\n};\n\nexport const BubbleMenu = (props: BubbleMenuProps) => {\n  const [element, setElement] = useState<HTMLDivElement | null>(null)\n  const { editor: currentEditor } = useCurrentEditor()\n\n  useEffect(() => {\n    if (!element) {\n      return\n    }\n\n    if (props.editor?.isDestroyed || currentEditor?.isDestroyed) {\n      return\n    }\n\n    const {\n      pluginKey = 'bubbleMenu', editor, tippyOptions = {}, updateDelay, shouldShow = null,\n    } = props\n\n    const menuEditor = editor || currentEditor\n\n    if (!menuEditor) {\n      console.warn('BubbleMenu component is not rendered inside of an editor component or does not have editor prop.')\n      return\n    }\n\n    const plugin = BubbleMenuPlugin({\n      updateDelay,\n      editor: menuEditor,\n      element,\n      pluginKey,\n      shouldShow,\n      tippyOptions,\n    })\n\n    menuEditor.registerPlugin(plugin)\n    return () => menuEditor.unregisterPlugin(pluginKey)\n  }, [props.editor, currentEditor, element])\n\n  return (\n    <div ref={setElement} className={props.className} style={{ visibility: 'hidden' }}>\n      {props.children}\n    </div>\n  )\n}\n","import { FloatingMenuPlugin, FloatingMenuPluginProps } from '@tiptap/extension-floating-menu'\nimport React, {\n  useEffect, useState,\n} from 'react'\n\nimport { useCurrentEditor } from './Context.js'\n\ntype Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>\n\nexport type FloatingMenuProps = Omit<Optional<FloatingMenuPluginProps, 'pluginKey'>, 'element' | 'editor'> & {\n  editor: FloatingMenuPluginProps['editor'] | null;\n  className?: string,\n  children: React.ReactNode\n}\n\nexport const FloatingMenu = (props: FloatingMenuProps) => {\n  const [element, setElement] = useState<HTMLDivElement | null>(null)\n  const { editor: currentEditor } = useCurrentEditor()\n\n  useEffect(() => {\n    if (!element) {\n      return\n    }\n\n    if (props.editor?.isDestroyed || currentEditor?.isDestroyed) {\n      return\n    }\n\n    const {\n      pluginKey = 'floatingMenu',\n      editor,\n      tippyOptions = {},\n      shouldShow = null,\n    } = props\n\n    const menuEditor = editor || currentEditor\n\n    if (!menuEditor) {\n      console.warn('FloatingMenu component is not rendered inside of an editor component or does not have editor prop.')\n      return\n    }\n\n    const plugin = FloatingMenuPlugin({\n      pluginKey,\n      editor: menuEditor,\n      element,\n      tippyOptions,\n      shouldShow,\n    })\n\n    menuEditor.registerPlugin(plugin)\n    return () => menuEditor.unregisterPlugin(pluginKey)\n  }, [\n    props.editor,\n    currentEditor,\n    element,\n  ])\n\n  return (\n    <div ref={setElement} className={props.className} style={{ visibility: 'hidden' }}>\n      {props.children}\n    </div>\n  )\n}\n","import { createContext, useContext } from 'react'\n\nexport interface ReactNodeViewContextProps {\n  onDragStart: (event: DragEvent) => void,\n  nodeViewContentRef: (element: HTMLElement | null) => void,\n}\n\nexport const ReactNodeViewContext = createContext<Partial<ReactNodeViewContextProps>>({\n  onDragStart: undefined,\n})\n\nexport const useReactNodeView = () => useContext(ReactNodeViewContext)\n","import React from 'react'\n\nimport { useReactNodeView } from './useReactNodeView.js'\n\nexport interface NodeViewContentProps {\n  [key: string]: any,\n  as?: React.ElementType,\n}\n\nexport const NodeViewContent: React.FC<NodeViewContentProps> = props => {\n  const Tag = props.as || 'div'\n  const { nodeViewContentRef } = useReactNodeView()\n\n  return (\n    // @ts-ignore\n    <Tag\n      {...props}\n      ref={nodeViewContentRef}\n      data-node-view-content=\"\"\n      style={{\n        whiteSpace: 'pre-wrap',\n        ...props.style,\n      }}\n    />\n  )\n}\n","import React from 'react'\n\nimport { useReactNodeView } from './useReactNodeView.js'\n\nexport interface NodeViewWrapperProps {\n  [key: string]: any,\n  as?: React.ElementType,\n}\n\nexport const NodeViewWrapper: React.FC<NodeViewWrapperProps> = React.forwardRef((props, ref) => {\n  const { onDragStart } = useReactNodeView()\n  const Tag = props.as || 'div'\n\n  return (\n    // @ts-ignore\n    <Tag\n      {...props}\n      ref={ref}\n      data-node-view-wrapper=\"\"\n      onDragStart={onDragStart}\n      style={{\n        whiteSpace: 'normal',\n        ...props.style,\n      }}\n    />\n  )\n})\n","import { Editor } from '@tiptap/core'\nimport React from 'react'\nimport { flushSync } from 'react-dom'\n\nimport { EditorWithContentComponent } from './Editor.js'\n\n/**\n * Check if a component is a class component.\n * @param Component\n * @returns {boolean}\n */\nfunction isClassComponent(Component: any) {\n  return !!(\n    typeof Component === 'function'\n    && Component.prototype\n    && Component.prototype.isReactComponent\n  )\n}\n\n/**\n * Check if a component is a forward ref component.\n * @param Component\n * @returns {boolean}\n */\nfunction isForwardRefComponent(Component: any) {\n  return !!(\n    typeof Component === 'object'\n    && Component.$$typeof?.toString() === 'Symbol(react.forward_ref)'\n  )\n}\n\nexport interface ReactRendererOptions {\n  /**\n   * The editor instance.\n   * @type {Editor}\n   */\n  editor: Editor,\n\n  /**\n   * The props for the component.\n   * @type {Record<string, any>}\n   * @default {}\n   */\n  props?: Record<string, any>,\n\n  /**\n   * The tag name of the element.\n   * @type {string}\n   * @default 'div'\n   */\n  as?: string,\n\n  /**\n   * The class name of the element.\n   * @type {string}\n   * @default ''\n   * @example 'foo bar'\n   */\n  className?: string,\n\n  /**\n   * The attributes of the element.\n   * @type {Record<string, string>}\n   * @default {}\n   * @example { 'data-foo': 'bar' }\n   */\n  attrs?: Record<string, string>,\n}\n\ntype ComponentType<R, P> =\n  React.ComponentClass<P> |\n  React.FunctionComponent<P> |\n  React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<R>>;\n\n/**\n * The ReactRenderer class. It's responsible for rendering React components inside the editor.\n * @example\n * new ReactRenderer(MyComponent, {\n *   editor,\n *   props: {\n *     foo: 'bar',\n *   },\n *   as: 'span',\n * })\n*/\nexport class ReactRenderer<R = unknown, P = unknown> {\n  id: string\n\n  editor: Editor\n\n  component: any\n\n  element: Element\n\n  props: Record<string, any>\n\n  reactElement: React.ReactNode\n\n  ref: R | null = null\n\n  constructor(component: ComponentType<R, P>, {\n    editor,\n    props = {},\n    as = 'div',\n    className = '',\n    attrs,\n  }: ReactRendererOptions) {\n    this.id = Math.floor(Math.random() * 0xFFFFFFFF).toString()\n    this.component = component\n    this.editor = editor as EditorWithContentComponent\n    this.props = props\n    this.element = document.createElement(as)\n    this.element.classList.add('react-renderer')\n\n    if (className) {\n      this.element.classList.add(...className.split(' '))\n    }\n\n    if (attrs) {\n      Object.keys(attrs).forEach(key => {\n        this.element.setAttribute(key, attrs[key])\n      })\n    }\n\n    if (this.editor.isInitialized) {\n      // On first render, we need to flush the render synchronously\n      // Renders afterwards can be async, but this fixes a cursor positioning issue\n      flushSync(() => {\n        this.render()\n      })\n    } else {\n      this.render()\n    }\n  }\n\n  render(): void {\n    const Component = this.component\n    const props = this.props\n    const editor = this.editor as EditorWithContentComponent\n\n    if (isClassComponent(Component) || isForwardRefComponent(Component)) {\n      props.ref = (ref: R) => {\n        this.ref = ref\n      }\n    }\n\n    this.reactElement = React.createElement(Component, props)\n\n    editor?.contentComponent?.setRenderer(this.id, this)\n  }\n\n  updateProps(props: Record<string, any> = {}): void {\n    this.props = {\n      ...this.props,\n      ...props,\n    }\n\n    this.render()\n  }\n\n  destroy(): void {\n    const editor = this.editor as EditorWithContentComponent\n\n    editor?.contentComponent?.removeRenderer(this.id)\n  }\n}\n","import {\n  DecorationWithType,\n  Editor,\n  NodeView,\n  NodeViewProps,\n  NodeViewRenderer,\n  NodeViewRendererOptions,\n  NodeViewRendererProps,\n} from '@tiptap/core'\nimport { Node as ProseMirrorNode } from '@tiptap/pm/model'\nimport { Decoration, NodeView as ProseMirrorNodeView } from '@tiptap/pm/view'\nimport React from 'react'\n\nimport { EditorWithContentComponent } from './Editor.js'\nimport { ReactRenderer } from './ReactRenderer.js'\nimport { ReactNodeViewContext, ReactNodeViewContextProps } from './useReactNodeView.js'\n\nexport interface ReactNodeViewRendererOptions extends NodeViewRendererOptions {\n  update:\n    | ((props: {\n        oldNode: ProseMirrorNode\n        oldDecorations: Decoration[]\n        newNode: ProseMirrorNode\n        newDecorations: Decoration[]\n        updateProps: () => void\n      }) => boolean)\n    | null\n  as?: string\n  className?: string\n  attrs?: Record<string, string>\n}\n\nclass ReactNodeView extends NodeView<\n  React.FunctionComponent,\n  Editor,\n  ReactNodeViewRendererOptions\n> {\n  renderer!: ReactRenderer\n\n  contentDOMElement!: HTMLElement | null\n\n  mount() {\n    const props: NodeViewProps = {\n      editor: this.editor,\n      node: this.node,\n      decorations: this.decorations,\n      selected: false,\n      extension: this.extension,\n      getPos: () => this.getPos(),\n      updateAttributes: (attributes = {}) => this.updateAttributes(attributes),\n      deleteNode: () => this.deleteNode(),\n    }\n\n    if (!(this.component as any).displayName) {\n      const capitalizeFirstChar = (string: string): string => {\n        return string.charAt(0).toUpperCase() + string.substring(1)\n      }\n\n      this.component.displayName = capitalizeFirstChar(this.extension.name)\n    }\n\n    const onDragStart = this.onDragStart.bind(this)\n    const nodeViewContentRef: ReactNodeViewContextProps['nodeViewContentRef'] = element => {\n      if (element && this.contentDOMElement && element.firstChild !== this.contentDOMElement) {\n        element.appendChild(this.contentDOMElement)\n      }\n    }\n    const context = { onDragStart, nodeViewContentRef }\n    const Component = this.component\n    // For performance reasons, we memoize the provider component\n    // And all of the things it requires are declared outside of the component, so it doesn't need to re-render\n    const ReactNodeViewProvider: React.FunctionComponent = React.memo(componentProps => {\n      return (\n        <ReactNodeViewContext.Provider value={context}>\n          {React.createElement(Component, componentProps)}\n        </ReactNodeViewContext.Provider>\n      )\n    })\n\n    ReactNodeViewProvider.displayName = 'ReactNodeView'\n\n    if (this.node.isLeaf) {\n      this.contentDOMElement = null\n    } else if (this.options.contentDOMElementTag) {\n      this.contentDOMElement = document.createElement(this.options.contentDOMElementTag)\n    } else {\n      this.contentDOMElement = document.createElement(this.node.isInline ? 'span' : 'div')\n    }\n\n    if (this.contentDOMElement) {\n      // For some reason the whiteSpace prop is not inherited properly in Chrome and Safari\n      // With this fix it seems to work fine\n      // See: https://github.com/ueberdosis/tiptap/issues/1197\n      this.contentDOMElement.style.whiteSpace = 'inherit'\n    }\n\n    let as = this.node.isInline ? 'span' : 'div'\n\n    if (this.options.as) {\n      as = this.options.as\n    }\n\n    const { className = '' } = this.options\n\n    this.handleSelectionUpdate = this.handleSelectionUpdate.bind(this)\n    this.editor.on('selectionUpdate', this.handleSelectionUpdate)\n\n    this.renderer = new ReactRenderer(ReactNodeViewProvider, {\n      editor: this.editor,\n      props,\n      as,\n      className: `node-${this.node.type.name} ${className}`.trim(),\n      attrs: this.options.attrs,\n    })\n  }\n\n  get dom() {\n    if (\n      this.renderer.element.firstElementChild\n      && !this.renderer.element.firstElementChild?.hasAttribute('data-node-view-wrapper')\n    ) {\n      throw Error('Please use the NodeViewWrapper component for your node view.')\n    }\n\n    return this.renderer.element as HTMLElement\n  }\n\n  get contentDOM() {\n    if (this.node.isLeaf) {\n      return null\n    }\n\n    return this.contentDOMElement\n  }\n\n  handleSelectionUpdate() {\n    const { from, to } = this.editor.state.selection\n\n    if (from <= this.getPos() && to >= this.getPos() + this.node.nodeSize) {\n      if (this.renderer.props.selected) {\n        return\n      }\n\n      this.selectNode()\n    } else {\n      if (!this.renderer.props.selected) {\n        return\n      }\n\n      this.deselectNode()\n    }\n  }\n\n  update(node: ProseMirrorNode, decorations: DecorationWithType[]) {\n    const updateProps = (props?: Record<string, any>) => {\n      this.renderer.updateProps(props)\n    }\n\n    if (node.type !== this.node.type) {\n      return false\n    }\n\n    if (typeof this.options.update === 'function') {\n      const oldNode = this.node\n      const oldDecorations = this.decorations\n\n      this.node = node\n      this.decorations = decorations\n\n      return this.options.update({\n        oldNode,\n        oldDecorations,\n        newNode: node,\n        newDecorations: decorations,\n        updateProps: () => updateProps({ node, decorations }),\n      })\n    }\n\n    if (node === this.node && this.decorations === decorations) {\n      return true\n    }\n\n    this.node = node\n    this.decorations = decorations\n\n    updateProps({ node, decorations })\n\n    return true\n  }\n\n  selectNode() {\n    this.renderer.updateProps({\n      selected: true,\n    })\n    this.renderer.element.classList.add('ProseMirror-selectednode')\n  }\n\n  deselectNode() {\n    this.renderer.updateProps({\n      selected: false,\n    })\n    this.renderer.element.classList.remove('ProseMirror-selectednode')\n  }\n\n  destroy() {\n    this.renderer.destroy()\n    this.editor.off('selectionUpdate', this.handleSelectionUpdate)\n    this.contentDOMElement = null\n  }\n}\n\nexport function ReactNodeViewRenderer(\n  component: any,\n  options?: Partial<ReactNodeViewRendererOptions>,\n): NodeViewRenderer {\n  return (props: NodeViewRendererProps) => {\n    // try to get the parent component\n    // this is important for vue devtools to show the component hierarchy correctly\n    // maybe it’s `undefined` because <editor-content> isn’t rendered yet\n    if (!(props.editor as EditorWithContentComponent).contentComponent) {\n      return {}\n    }\n\n    return new ReactNodeView(component, props, options) as unknown as ProseMirrorNodeView\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;EASa,IAAIA,CAAC,GAACC,KAAgB;EAAC,SAASC,CAACA,CAACC,CAAC,EAACC,CAAC,EAAC;IAAC,OAAOD,CAAC,KAAGC,CAAC,KAAG,CAAC,KAAGD,CAAC,IAAE,CAAC,GAACA,CAAC,KAAG,CAAC,GAACC,CAAC,CAAC,IAAED,CAAC,KAAGA,CAAC,IAAEC,CAAC,KAAGA,CAAC;EAAA;EAAC,IAAIC,CAAC,GAAC,UAAU,KAAG,OAAOC,MAAM,CAACC,EAAE,GAACD,MAAM,CAACC,EAAE,GAACL,CAAC;IAACM,CAAC,GAACR,CAAC,CAACS,QAAQ;IAACC,CAAC,GAACV,CAAC,CAACW,SAAS;IAACC,CAAC,GAACZ,CAAC,CAACa,eAAe;IAACC,CAAC,GAACd,CAAC,CAACe,aAAa;EAAC,SAASC,CAACA,CAACb,CAAC,EAACC,CAAC,EAAC;IAAC,IAAIa,CAAC,GAACb,CAAC,EAAE;MAACc,CAAC,GAACV,CAAC,CAAC;QAACW,IAAI,EAAC;UAACC,KAAK,EAACH,CAAC;UAACI,WAAW,EAACjB;QAAC;MAAC,CAAC,CAAC;MAACkB,CAAC,GAACJ,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI;MAACI,CAAC,GAACL,CAAC,CAAC,CAAC,CAAC;IAACN,CAAC,CAAC,YAAU;MAACU,CAAC,CAACF,KAAK,GAACH,CAAC;MAACK,CAAC,CAACD,WAAW,GAACjB,CAAC;MAACoB,CAAC,CAACF,CAAC,CAAC,IAAEC,CAAC,CAAC;QAACJ,IAAI,EAACG;MAAC,CAAC;IAAC,CAAC,EAAC,CAACnB,CAAC,EAACc,CAAC,EAACb,CAAC,CAAC,CAAC;IAACM,CAAC,CAAC,YAAU;MAACc,CAAC,CAACF,CAAC,CAAC,IAAEC,CAAC,CAAC;QAACJ,IAAI,EAACG;MAAC,CAAC,CAAC;MAAC,OAAOnB,CAAC,CAAC,YAAU;QAACqB,CAAC,CAACF,CAAC,CAAC,IAAEC,CAAC,CAAC;UAACJ,IAAI,EAACG;QAAC,CAAC;MAAC,CAAC,CAAC;IAAA,CAAC,EAAC,CAACnB,CAAC,CAAC,CAAC;IAACW,CAAC,CAACG,CAAC,CAAC;IAAC,OAAOA,CAAC;EAAA;EAClc,SAASO,CAACA,CAACrB,CAAC,EAAC;IAAC,IAAIC,CAAC,GAACD,CAAC,CAACkB,WAAW;IAAClB,CAAC,GAACA,CAAC,CAACiB,KAAK;IAAC,IAAG;MAAC,IAAIH,CAAC,GAACb,CAAC,EAAE;MAAC,OAAM,CAACC,CAAC,CAACF,CAAC,EAACc,CAAC,CAAC;IAAA,CAAC,QAAMC,CAAC,EAAC;MAAC,OAAM,CAAC,CAAC;IAAA;EAAC;EAAC,SAASO,CAACA,CAACtB,CAAC,EAACC,CAAC,EAAC;IAAC,OAAOA,CAAC,EAAE;EAAA;EAAC,IAAIsB,CAAC,GAAC,WAAW,KAAG,OAAOC,MAAM,IAAE,WAAW,KAAG,OAAOA,MAAM,CAACC,QAAQ,IAAE,WAAW,KAAG,OAAOD,MAAM,CAACC,QAAQ,CAACC,aAAa,GAACJ,CAAC,GAACT,CAAC;EAACc,uCAA4B,CAAAC,oBAAA,GAAC,KAAK,CAAC,KAAG/B,CAAC,CAAC+B,oBAAoB,GAAC/B,CAAC,CAAC+B,oBAAoB,GAACL,CAAC;;;;;;;;;;;;;;;;;;;ECE3U,IAAIM,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,CAAC,YAAW;MAId;MACA,IACE,OAAOC,8BAA8B,KAAK,WAAW,IACrD,OAAOA,8BAA8B,CAACC,2BAA2B,KAC/D,UAAU,EACZ;QACAD,8BAA8B,CAACC,2BAA2B,CAAC,IAAIC,KAAK,EAAE,CAAC;;MAE/D,IAAIC,OAAK,GAAGrC,KAAgB;MAEtC,IAAIsC,oBAAoB,GAAGD,OAAK,CAACE,kDAAkD;MAEnF,SAASC,KAAKA,CAACC,MAAM,EAAE;QACrB;UACE;YACE,KAAK,IAAIC,KAAK,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACJ,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEK,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGL,KAAK,EAAEK,KAAK,EAAE,EAAE;cACjHF,IAAI,CAACE,KAAK,GAAG,CAAC,CAAC,GAAGJ,SAAS,CAACI,KAAK,CAAC;;YAGpCC,YAAY,CAAC,OAAO,EAAEP,MAAM,EAAEI,IAAI,CAAC;;;;MAKzC,SAASG,YAAYA,CAACC,KAAK,EAAER,MAAM,EAAEI,IAAI,EAAE;QAC3C;QACA;QACE;UACE,IAAIK,sBAAsB,GAAGZ,oBAAoB,CAACY,sBAAsB;UACxE,IAAIC,KAAK,GAAGD,sBAAsB,CAACE,gBAAgB,EAAE;UAErD,IAAID,KAAK,KAAK,EAAE,EAAE;YAChBV,MAAM,IAAI,IAAI;YACdI,IAAI,GAAGA,IAAI,CAACQ,MAAM,CAAC,CAACF,KAAK,CAAC,CAAC;WAC5B;;UAGD,IAAIG,cAAc,GAAGT,IAAI,CAACU,GAAG,CAAC,UAAUC,IAAI,EAAE;YAC5C,OAAOC,MAAM,CAACD,IAAI,CAAC;UACzB,CAAK,CAAC,CAAC;;UAEHF,cAAc,CAACI,OAAO,CAAC,WAAW,GAAGjB,MAAM,CAAC,CAAC;UACjD;UACA;;UAEIkB,QAAQ,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACC,OAAO,CAACd,KAAK,CAAC,EAAEc,OAAO,EAAET,cAAc,CAAC;;;;MAI1E;AACA;AACA;AACA;MACA,SAAShD,EAAEA,CAAC0D,CAAC,EAAEC,CAAC,EAAE;QAChB,OAAOD,CAAC,KAAKC,CAAC,KAAKD,CAAC,KAAK,CAAC,IAAI,CAAC,GAAGA,CAAC,KAAK,CAAC,GAAGC,CAAC,CAAC,IAAID,CAAC,KAAKA,CAAC,IAAIC,CAAC,KAAKA,CAAC;QAAA;;MAItE,IAAIC,QAAQ,GAAG,OAAO7D,MAAM,CAACC,EAAE,KAAK,UAAU,GAAGD,MAAM,CAACC,EAAE,GAAGA,EAAE;;MAE/D;;MAEA,IAAIE,QAAQ,GAAG6B,OAAK,CAAC7B,QAAQ;QACzBE,SAAS,GAAG2B,OAAK,CAAC3B,SAAS;QAC3BE,eAAe,GAAGyB,OAAK,CAACzB,eAAe;QACvCE,aAAa,GAAGuB,OAAK,CAACvB,aAAa;MACvC,IAAIqD,iBAAiB,GAAG,KAAK;MAC7B,IAAIC,0BAA0B,GAAG,KAAK,CAAC;MACvC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA,SAAStC,oBAAoBA,CAACuC,SAAS,EAAEjD,WAAW;MAAA;MACpD;MACA;MACA;MACAkD,iBAAiB,EAAE;QACjB;UACE,IAAI,CAACH,iBAAiB,EAAE;YACtB,IAAI9B,OAAK,CAACkC,eAAe,KAAKC,SAAS,EAAE;cACvCL,iBAAiB,GAAG,IAAI;cAExB3B,KAAK,CAAC,gEAAgE,GAAG,6CAA6C,GAAG,gEAAgE,GAAG,yBAAyB,CAAC;;;SAG3N;QACH;QACA;QACA;;QAGE,IAAIrB,KAAK,GAAGC,WAAW,EAAE;QAEzB;UACE,IAAI,CAACgD,0BAA0B,EAAE;YAC/B,IAAIK,WAAW,GAAGrD,WAAW,EAAE;YAE/B,IAAI,CAAC8C,QAAQ,CAAC/C,KAAK,EAAEsD,WAAW,CAAC,EAAE;cACjCjC,KAAK,CAAC,sEAAsE,CAAC;cAE7E4B,0BAA0B,GAAG,IAAI;;;SAGtC;QACH;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAGE,IAAIM,SAAS,GAAGlE,QAAQ,CAAC;YACvBU,IAAI,EAAE;cACJC,KAAK,EAAEA,KAAK;cACZC,WAAW,EAAEA;;UAEnB,CAAG,CAAC;UACEF,IAAI,GAAGwD,SAAS,CAAC,CAAC,CAAC,CAACxD,IAAI;UACxByD,WAAW,GAAGD,SAAS,CAAC,CAAC,CAAC,CAAC;QACjC;QACA;;QAGE9D,eAAe,CAAC,YAAY;UAC1BM,IAAI,CAACC,KAAK,GAAGA,KAAK;UAClBD,IAAI,CAACE,WAAW,GAAGA,WAAW,CAAC;UACnC;UACA;UACA;;UAEI,IAAIwD,sBAAsB,CAAC1D,IAAI,CAAC,EAAE;YACtC;YACMyD,WAAW,CAAC;cACVzD,IAAI,EAAEA;YACd,CAAO,CAAC;;SAEL,EAAE,CAACmD,SAAS,EAAElD,KAAK,EAAEC,WAAW,CAAC,CAAC;QACnCV,SAAS,CAAC,YAAY;UACxB;UACA;UACI,IAAIkE,sBAAsB,CAAC1D,IAAI,CAAC,EAAE;YACtC;YACMyD,WAAW,CAAC;cACVzD,IAAI,EAAEA;YACd,CAAO,CAAC;;UAGJ,IAAI2D,iBAAiB,GAAG,SAAAA,CAAA,EAAY;YACxC;YACA;YACA;YACA;YACA;YACA;YACM,IAAID,sBAAsB,CAAC1D,IAAI,CAAC,EAAE;cACxC;cACQyD,WAAW,CAAC;gBACVzD,IAAI,EAAEA;cAChB,CAAS,CAAC;;UAEV,CAAK,CAAC;;UAGF,OAAOmD,SAAS,CAACQ,iBAAiB,CAAC;QACvC,CAAG,EAAE,CAACR,SAAS,CAAC,CAAC;QACfvD,aAAa,CAACK,KAAK,CAAC;QACpB,OAAOA,KAAK;;MAGd,SAASyD,sBAAsBA,CAAC1D,IAAI,EAAE;QACpC,IAAI4D,iBAAiB,GAAG5D,IAAI,CAACE,WAAW;QACxC,IAAI2D,SAAS,GAAG7D,IAAI,CAACC,KAAK;QAE1B,IAAI;UACF,IAAI6D,SAAS,GAAGF,iBAAiB,EAAE;UACnC,OAAO,CAACZ,QAAQ,CAACa,SAAS,EAAEC,SAAS,CAAC;SACvC,CAAC,OAAOxC,KAAK,EAAE;UACd,OAAO,IAAI;;;MAIf,SAASyC,sBAAsBA,CAACZ,SAAS,EAAEjD,WAAW,EAAEkD,iBAAiB,EAAE;QAC3E;QACA;QACA;QACA;QACE,OAAOlD,WAAW,EAAE;;MAGtB,IAAI8D,SAAS,GAAG,CAAC,EAAE,OAAOxD,MAAM,KAAK,WAAW,IAAI,OAAOA,MAAM,CAACC,QAAQ,KAAK,WAAW,IAAI,OAAOD,MAAM,CAACC,QAAQ,CAACC,aAAa,KAAK,WAAW,CAAC;MAEnJ,IAAIuD,mBAAmB,GAAG,CAACD,SAAS;MAEpC,IAAIE,IAAI,GAAGD,mBAAmB,GAAGF,sBAAsB,GAAGnD,oBAAoB;MAC9E,IAAIuD,sBAAsB,GAAGhD,OAAK,CAACP,oBAAoB,KAAK0C,SAAS,GAAGnC,OAAK,CAACP,oBAAoB,GAAGsD,IAAI;MAE7EE,oCAAA,CAAAxD,oBAAA,GAAGuD,sBAAsB;MACrD;MACA,IACE,OAAOnD,8BAA8B,KAAK,WAAW,IACrD,OAAOA,8BAA8B,CAACqD,0BAA0B,KAC9D,UAAU,EACZ;QACArD,8BAA8B,CAACqD,0BAA0B,CAAC,IAAInD,KAAK,EAAE,CAAC;;IAGxE,CAAG,GAAG;EACN;;;AC5OA,IAAIL,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCmD,IAAA,CAAAI,OAAc,GAAGC,8CAAA,EAAgE;AACnF,CAAC,MAAM;EACLL,IAAA,CAAAI,OAAc,GAAGE,2CAAA,EAA6D;AAChF;;ACIA,MAAMC,SAAS,GAAGA,CAChB,GAAGC,IAA2D,KAC5D;EACF,OAAQC,IAAO,IAAI;IACjBD,IAAI,CAACE,OAAO,CAACC,GAAG,IAAG;MACjB,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;QAC7BA,GAAG,CAACF,IAAI,CAAC;OACV,MAAM,IAAIE,GAAG,EAAE;QACbA,GAAkC,CAACC,OAAO,GAAGH,IAAI;;IAEtD,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;AAED;;AAEG;AACH,MAAMI,OAAO,GAAqDA,CAAC;EACjEC;AAAgB,CACjB,KAAI;;EAEH,MAAMC,SAAS,GAAGC,WAAA,CAAAtE,oBAAoB,CACpCoE,gBAAgB,CAAC7B,SAAS,EAC1B6B,gBAAgB,CAAC9E,WAAW,EAC5B8E,gBAAgB,CAAC5B,iBAAiB,CACnC;;EAGD,OACEtE,KACG,CAAA4B,aAAA,CAAA5B,KAAA,CAAAqG,QAAA,QAAAhG,MAAM,CAACiG,MAAM,CAACH,SAAS,CAAC,CACxB;AAEP,CAAC;AAOD,SAASI,WAAWA,CAAA;EAClB,MAAMC,WAAW,GAAG,IAAIC,GAAG,EAAc;EACzC,IAAIN,SAAS,GAAsC,EAAE;EAErD,OAAO;IACL;;AAEG;IACH9B,SAASA,CAACqC,QAAoB;MAC5BF,WAAW,CAACG,GAAG,CAACD,QAAQ,CAAC;MACzB,OAAO,MAAK;QACVF,WAAW,CAACI,MAAM,CAACF,QAAQ,CAAC;MAC9B,CAAC;KACF;IACDtF,WAAWA,CAAA;MACT,OAAO+E,SAAS;KACjB;IACD7B,iBAAiBA,CAAA;MACf,OAAO6B,SAAS;KACjB;IACD;;AAEG;IACHU,WAAWA,CAACC,EAAU,EAAEC,QAAuB;MAC7CZ,SAAS,GAAG;QACV,GAAGA,SAAS;QACZ,CAACW,EAAE,GAAGE,QAAQ,CAACC,YAAY,CAACF,QAAQ,CAACG,YAAY,EAAEH,QAAQ,CAACI,OAAO,EAAEL,EAAE;OACxE;MAEDN,WAAW,CAACV,OAAO,CAACsB,UAAU,IAAIA,UAAU,EAAE,CAAC;KAChD;IACD;;AAEG;IACHC,cAAcA,CAACP,EAAU;MACvB,MAAMQ,aAAa,GAAG;QAAE,GAAGnB;MAAS,CAAE;MAEtC,OAAOmB,aAAa,CAACR,EAAE,CAAC;MACxBX,SAAS,GAAGmB,aAAa;MACzBd,WAAW,CAACV,OAAO,CAACsB,UAAU,IAAIA,UAAU,EAAE,CAAC;;GAElD;AACH;AAEa,MAAAG,iBAAkB,SAAQvH,KAAK,CAACwH,SAG5C;EAOCC,YAAYC,KAAyB;;IACnC,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,gBAAgB,GAAG3H,KAAK,CAAC4H,SAAS,EAAE;IACzC,IAAI,CAACC,WAAW,GAAG,KAAK;IAExB,IAAI,CAACC,KAAK,GAAG;MACXC,8BAA8B,EAAEC,OAAO,CAAC,CAAAC,EAAA,GAACP,KAAK,CAACQ,MAA4C,MAAE,QAAAD,EAAA,uBAAAA,EAAA,CAAA/B,gBAAgB;KAC9G;;EAGHiC,iBAAiBA,CAAA;IACf,IAAI,CAACC,IAAI,EAAE;;EAGbC,kBAAkBA,CAAA;IAChB,IAAI,CAACD,IAAI,EAAE;;EAGbA,IAAIA,CAAA;IACF,MAAMF,MAAM,GAAG,IAAI,CAACR,KAAK,CAACQ,MAA2C;IAErE,IAAIA,MAAM,IAAI,CAACA,MAAM,CAACI,WAAW,IAAIJ,MAAM,CAACK,OAAO,CAACpB,OAAO,EAAE;MAC3D,IAAIe,MAAM,CAAChC,gBAAgB,EAAE;QAC3B;;MAGF,MAAMiB,OAAO,GAAG,IAAI,CAACQ,gBAAgB,CAAC3B,OAAO;MAE7CmB,OAAO,CAACqB,MAAM,CAAC,GAAGN,MAAM,CAACK,OAAO,CAACpB,OAAO,CAACsB,UAAU,CAAC;MAEpDP,MAAM,CAACQ,UAAU,CAAC;QAChBvB;MACD,EAAC;MAEFe,MAAM,CAAChC,gBAAgB,GAAGK,WAAW,EAAE;;MAGvC,IAAI,CAAC,IAAI,CAACuB,KAAK,CAACC,8BAA8B,EAAE;;QAE9C,IAAI,CAACY,6BAA6B,GAAGT,MAAM,CAAChC,gBAAgB,CAAC7B,SAAS,CAAC,MAAK;UAC1E,IAAI,CAACuE,QAAQ,CAACC,SAAS,IAAG;YACxB,IAAI,CAACA,SAAS,CAACd,8BAA8B,EAAE;cAC7C,OAAO;gBACLA,8BAA8B,EAAE;eACjC;;YAEH,OAAOc,SAAS;UAClB,CAAC,CAAC;;UAGF,IAAI,IAAI,CAACF,6BAA6B,EAAE;YACtC,IAAI,CAACA,6BAA6B,EAAE;;QAExC,CAAC,CAAC;;MAGJT,MAAM,CAACY,eAAe,EAAE;MAExB,IAAI,CAACjB,WAAW,GAAG,IAAI;;;EAI3BkB,oBAAoBA,CAAA;IAClB,MAAMb,MAAM,GAAG,IAAI,CAACR,KAAK,CAACQ,MAA2C;IAErE,IAAI,CAACA,MAAM,EAAE;MACX;;IAGF,IAAI,CAACL,WAAW,GAAG,KAAK;IAExB,IAAI,CAACK,MAAM,CAACI,WAAW,EAAE;MACvBJ,MAAM,CAACc,IAAI,CAACC,QAAQ,CAAC;QACnBC,SAAS,EAAE;MACZ,EAAC;;IAGJ,IAAI,IAAI,CAACP,6BAA6B,EAAE;MACtC,IAAI,CAACA,6BAA6B,EAAE;;IAGtCT,MAAM,CAAChC,gBAAgB,GAAG,IAAI;IAE9B,IAAI,CAACgC,MAAM,CAACK,OAAO,CAACpB,OAAO,CAACgC,UAAU,EAAE;MACtC;;IAGF,MAAMC,UAAU,GAAGzH,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAEhDwH,UAAU,CAACZ,MAAM,CAAC,GAAGN,MAAM,CAACK,OAAO,CAACpB,OAAO,CAACsB,UAAU,CAAC;IAEvDP,MAAM,CAACQ,UAAU,CAAC;MAChBvB,OAAO,EAAEiC;IACV,EAAC;;EAGJC,MAAMA,CAAA;IACJ,MAAM;MAAEnB,MAAM;MAAEoB,QAAQ;MAAE,GAAGC;IAAI,CAAE,GAAG,IAAI,CAAC7B,KAAK;IAEhD,OACE1H,KAAA,CAAA4B,aAAA,CAAA5B,KAAA,CAAAqG,QAAA,QACErG,KAAA,CAAA4B,aAAA;MAAKmE,GAAG,EAAEJ,SAAS,CAAC2D,QAAQ,EAAE,IAAI,CAAC3B,gBAAgB,CAAC;MAAM,GAAA4B;IAAI,CAAI,GAEjE,CAAArB,MAAM,KAAN,QAAAA,MAAM,uBAANA,MAAM,CAAEhC,gBAAgB,KAAIlG,KAAA,CAAA4B,aAAA,CAACqE,OAAO,EAAC;MAAAC,gBAAgB,EAAEgC,MAAM,CAAChC;IAAgB,CAAI,EAClF;;AAGR;AAED;AACA,MAAMsD,oBAAoB,GAAGC,UAAU,CACrC,CAAC/B,KAA2C,EAAE3B,GAAG,KAAI;EACnD,MAAM2D,GAAG,GAAG1J,KAAK,CAAC2J,OAAO,CAAC,MAAK;IAC7B,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,UAAU,CAAC,CAACC,QAAQ,EAAE;;EAE1D,CAAC,EAAE,CAACrC,KAAK,CAACQ,MAAM,CAAC,CAAC;;EAGlB,OAAOlI,KAAK,CAAC4B,aAAa,CAAC2F,iBAAiB,EAAE;IAC5CmC,GAAG;IACHJ,QAAQ,EAAEvD,GAAG;IACb,GAAG2B;EACJ,EAAC;AACJ,CAAC,CACF;AAEY,MAAAsC,aAAa,GAAGhK,KAAK,CAACiK,IAAI,CAACT,oBAAoB;;;;;;;;;;;;;;;;;;;;EC7N/C,IAAIvJ,CAAC,GAACD,KAAgB;IAACW,CAAC,GAACyF,WAAuC;EAAC,SAASvF,CAACA,CAACX,CAAC,EAACC,CAAC,EAAC;IAAC,OAAOD,CAAC,KAAGC,CAAC,KAAG,CAAC,KAAGD,CAAC,IAAE,CAAC,GAACA,CAAC,KAAG,CAAC,GAACC,CAAC,CAAC,IAAED,CAAC,KAAGA,CAAC,IAAEC,CAAC,KAAGA,CAAC;EAAA;EAAC,IAAIY,CAAC,GAAC,UAAU,KAAG,OAAOV,MAAM,CAACC,EAAE,GAACD,MAAM,CAACC,EAAE,GAACO,CAAC;IAACU,CAAC,GAACZ,CAAC,CAACmB,oBAAoB;IAACN,CAAC,GAACvB,CAAC,CAACiK,MAAM;IAACzI,CAAC,GAACxB,CAAC,CAACS,SAAS;IAACyJ,CAAC,GAAClK,CAAC,CAAC0J,OAAO;IAACS,CAAC,GAACnK,CAAC,CAACa,aAAa;EAC5QuJ,2BAAA,CAAAC,gCAAwC,GAAC,UAASpK,CAAC,EAACC,CAAC,EAACJ,CAAC,EAACQ,CAAC,EAACe,CAAC,EAAC;IAAC,IAAID,CAAC,GAACG,CAAC,CAAC,IAAI,CAAC;IAAC,IAAG,IAAI,KAAGH,CAAC,CAAC2E,OAAO,EAAC;MAAC,IAAI/E,CAAC,GAAC;QAACsJ,QAAQ,EAAC,CAAC,CAAC;QAACpJ,KAAK,EAAC;MAAI,CAAC;MAACE,CAAC,CAAC2E,OAAO,GAAC/E,CAAA;IAAC,CAAC,MAAKA,CAAC,GAACI,CAAC,CAAC2E,OAAO;IAAC3E,CAAC,GAAC8I,CAAC,CAAC,YAAU;MAAC,SAASjK,CAACA,CAACA,CAAC,EAAC;QAAC,IAAG,CAACmB,CAAC,EAAC;UAACA,CAAC,GAAC,CAAC,CAAC;UAACL,CAAC,GAACd,CAAC;UAACA,CAAC,GAACK,CAAC,CAACL,CAAC,CAAC;UAAC,IAAG,KAAK,CAAC,KAAGoB,CAAC,IAAEL,CAAC,CAACsJ,QAAQ,EAAC;YAAC,IAAIpK,CAAC,GAACc,CAAC,CAACE,KAAK;YAAC,IAAGG,CAAC,CAACnB,CAAC,EAACD,CAAC,CAAC,EAAC,OAAOE,CAAC,GAACD,CAAC;UAAA;UAAC,OAAOC,CAAC,GAACF,CAAC;QAAA;QAACC,CAAC,GAACC,CAAC;QAAC,IAAGW,CAAC,CAACC,CAAC,EAACd,CAAC,CAAC,EAAC,OAAOC,CAAC;QAAC,IAAIJ,CAAC,GAACQ,CAAC,CAACL,CAAC,CAAC;QAAC,IAAG,KAAK,CAAC,KAAGoB,CAAC,IAAEA,CAAC,CAACnB,CAAC,EAACJ,CAAC,CAAC,EAAC,OAAOI,CAAC;QAACa,CAAC,GAACd,CAAC;QAAC,OAAOE,CAAC,GAACL,CAAC;MAAA;MAAC,IAAIsB,CAAC,GAAC,CAAC,CAAC;QAACL,CAAC;QAACZ,CAAC;QAACK,CAAC,GAAC,KAAK,CAAC,KAAGV,CAAC,GAAC,IAAI,GAACA,CAAC;MAAC,OAAM,CAAC,YAAU;QAAC,OAAOG,CAAC,CAACC,CAAC,EAAE,CAAC;MAAA,CAAC,EAAC,IAAI,KAAGM,CAAC,GAAC,KAAK,CAAC,GAAC,YAAU;QAAC,OAAOP,CAAC,CAACO,CAAC,EAAE,CAAC;MAAA,CAAC,CAAC;IAAA,CAAC,EAAC,CAACN,CAAC,EAACJ,CAAC,EAACQ,CAAC,EAACe,CAAC,CAAC,CAAC;IAAC,IAAIN,CAAC,GAACO,CAAC,CAACrB,CAAC,EAACmB,CAAC,CAAC,CAAC,CAAC,EAACA,CAAC,CAAC,CAAC,CAAC,CAAC;IACtfI,CAAC,CAAC,YAAU;MAACR,CAAC,CAACsJ,QAAQ,GAAC,CAAC,CAAC;MAACtJ,CAAC,CAACE,KAAK,GAACH,CAAA;IAAC,CAAC,EAAC,CAACA,CAAC,CAAC,CAAC;IAACoJ,CAAC,CAACpJ,CAAC,CAAC;IAAC,OAAOA,CAAC;EAAA,CAAC;;;;;;;;;;;;;;;;;;;ECCzD,IAAIe,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,CAAC,YAAW;MAId;MACA,IACE,OAAOC,8BAA8B,KAAK,WAAW,IACrD,OAAOA,8BAA8B,CAACC,2BAA2B,KAC/D,UAAU,EACZ;QACAD,8BAA8B,CAACC,2BAA2B,CAAC,IAAIC,KAAK,EAAE,CAAC;;MAE/D,IAAIC,OAAK,GAAGrC,KAAgB;MACtC,IAAIoF,IAAI,GAAGgB,WAAuC;;MAElD;AACA;AACA;AACA;MACA,SAAS9F,EAAEA,CAAC0D,CAAC,EAAEC,CAAC,EAAE;QAChB,OAAOD,CAAC,KAAKC,CAAC,KAAKD,CAAC,KAAK,CAAC,IAAI,CAAC,GAAGA,CAAC,KAAK,CAAC,GAAGC,CAAC,CAAC,IAAID,CAAC,KAAKA,CAAC,IAAIC,CAAC,KAAKA,CAAC;QAAA;;MAItE,IAAIC,QAAQ,GAAG,OAAO7D,MAAM,CAACC,EAAE,KAAK,UAAU,GAAGD,MAAM,CAACC,EAAE,GAAGA,EAAE;MAE/D,IAAIwB,oBAAoB,GAAGsD,IAAI,CAACtD,oBAAoB;;MAEpD;;MAEA,IAAIoI,MAAM,GAAG7H,OAAK,CAAC6H,MAAM;QACrBxJ,SAAS,GAAG2B,OAAK,CAAC3B,SAAS;QAC3BiJ,OAAO,GAAGtH,OAAK,CAACsH,OAAO;QACvB7I,aAAa,GAAGuB,OAAK,CAACvB,aAAa,CAAC;;MAExC,SAASwJ,gCAAgCA,CAACjG,SAAS,EAAEjD,WAAW,EAAEkD,iBAAiB,EAAEkG,QAAQ,EAAEC,OAAO,EAAE;QACxG;QACE,IAAIC,OAAO,GAAGR,MAAM,CAAC,IAAI,CAAC;QAC1B,IAAIhJ,IAAI;QAER,IAAIwJ,OAAO,CAAC1E,OAAO,KAAK,IAAI,EAAE;UAC5B9E,IAAI,GAAG;YACLqJ,QAAQ,EAAE,KAAK;YACfpJ,KAAK,EAAE;UACb,CAAK;UACDuJ,OAAO,CAAC1E,OAAO,GAAG9E,IAAI;QAC1B,CAAG,MAAM;UACLA,IAAI,GAAGwJ,OAAO,CAAC1E,OAAO;;QAGxB,IAAI2E,QAAQ,GAAGhB,OAAO,CAAC,YAAY;YACrC;YACA;YACA;YACA;YACI,IAAIiB,OAAO,GAAG,KAAK;YACnB,IAAIC,gBAAgB;YACpB,IAAIC,iBAAiB;YAErB,IAAIC,gBAAgB,GAAG,SAAAA,CAAUC,YAAY,EAAE;cAC7C,IAAI,CAACJ,OAAO,EAAE;gBACpB;gBACQA,OAAO,GAAG,IAAI;gBACdC,gBAAgB,GAAGG,YAAY;gBAE/B,IAAIC,cAAc,GAAGT,QAAQ,CAACQ,YAAY,CAAC;gBAE3C,IAAIP,OAAO,KAAKjG,SAAS,EAAE;kBACnC;kBACA;kBACA;kBACU,IAAItD,IAAI,CAACqJ,QAAQ,EAAE;oBACjB,IAAIW,gBAAgB,GAAGhK,IAAI,CAACC,KAAK;oBAEjC,IAAIsJ,OAAO,CAACS,gBAAgB,EAAED,cAAc,CAAC,EAAE;sBAC7CH,iBAAiB,GAAGI,gBAAgB;sBACpC,OAAOA,gBAAgB;;;;gBAK7BJ,iBAAiB,GAAGG,cAAc;gBAClC,OAAOA,cAAc;eACtB;;cAGP;cACM,IAAIE,YAAY,GAAGN,gBAAgB;cACnC,IAAIO,aAAa,GAAGN,iBAAiB;cAErC,IAAI5G,QAAQ,CAACiH,YAAY,EAAEH,YAAY,CAAC,EAAE;gBAChD;gBACQ,OAAOI,aAAa;eACrB;;cAGP;cACM,IAAIC,aAAa,GAAGb,QAAQ,CAACQ,YAAY,CAAC,CAAC;cACjD;cACA;cACA;;cAEA;cACA;cACA;cACA;cACM,IAAIP,OAAO,KAAKjG,SAAS,IAAIiG,OAAO,CAACW,aAAa,EAAEC,aAAa,CAAC,EAAE;gBAClE,OAAOD,aAAa;;cAGtBP,gBAAgB,GAAGG,YAAY;cAC/BF,iBAAiB,GAAGO,aAAa;cACjC,OAAOA,aAAa;YAC1B,CAAK,CAAC;;YAGN;YACI,IAAIC,sBAAsB,GAAGhH,iBAAiB,KAAKE,SAAS,GAAG,IAAI,GAAGF,iBAAiB;YAEvF,IAAIiH,uBAAuB,GAAG,SAAAA,CAAA,EAAY;cACxC,OAAOR,gBAAgB,CAAC3J,WAAW,EAAE,CAAC;YAC5C,CAAK;YAED,IAAIoK,6BAA6B,GAAGF,sBAAsB,KAAK,IAAI,GAAG9G,SAAS,GAAG,YAAY;cAC5F,OAAOuG,gBAAgB,CAACO,sBAAsB,EAAE,CAAC;YACvD,CAAK;YACD,OAAO,CAACC,uBAAuB,EAAEC,6BAA6B,CAAC;WAChE,EAAE,CAACpK,WAAW,EAAEkD,iBAAiB,EAAEkG,QAAQ,EAAEC,OAAO,CAAC,CAAC;UACnDgB,YAAY,GAAGd,QAAQ,CAAC,CAAC,CAAC;UAC1Be,kBAAkB,GAAGf,QAAQ,CAAC,CAAC,CAAC;QAEpC,IAAIxJ,KAAK,GAAGW,oBAAoB,CAACuC,SAAS,EAAEoH,YAAY,EAAEC,kBAAkB,CAAC;QAC7EhL,SAAS,CAAC,YAAY;UACpBQ,IAAI,CAACqJ,QAAQ,GAAG,IAAI;UACpBrJ,IAAI,CAACC,KAAK,GAAGA,KAAK;QACtB,CAAG,EAAE,CAACA,KAAK,CAAC,CAAC;QACXL,aAAa,CAACK,KAAK,CAAC;QACpB,OAAOA,KAAK;;MAG0BwK,wBAAA,CAAArB,gCAAA,GAAGA,gCAAgC;MAC3E;MACA,IACE,OAAOpI,8BAA8B,KAAK,WAAW,IACrD,OAAOA,8BAA8B,CAACqD,0BAA0B,KAC9D,UAAU,EACZ;QACArD,8BAA8B,CAACqD,0BAA0B,CAAC,IAAInD,KAAK,EAAE,CAAC;;IAGxE,CAAG,GAAG;EACN;;;AClKA,IAAIL,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzC2J,YAAA,CAAApG,OAAc,GAAGqG,kCAAA,EAA8E;AACjG,CAAC,MAAM;EACLD,YAAA,CAAApG,OAAc,GAAGsG,+BAAA,EAA2E;AAC9F;;;ACqBA;;;AAGG;AACH,MAAMC,kBAAkB;EAWtBtE,YAAYuE,aAAsB;IAV1B,IAAiB,CAAAC,iBAAA,GAAG,CAAC;IAErB,IAAqB,CAAAC,qBAAA,GAAG,CAAC;IAMzB,KAAA1F,WAAW,GAAG,IAAIC,GAAG,EAAc;IAGzC,IAAI,CAACyB,MAAM,GAAG8D,aAAa;IAC3B,IAAI,CAACG,YAAY,GAAG;MAAEjE,MAAM,EAAE8D,aAAa;MAAEC,iBAAiB,EAAE;IAAC,CAAE;IAEnE,IAAI,CAAC7K,WAAW,GAAG,IAAI,CAACA,WAAW,CAACgL,IAAI,CAAC,IAAI,CAAC;IAC9C,IAAI,CAAC9H,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAAC8H,IAAI,CAAC,IAAI,CAAC;IAC1D,IAAI,CAACC,KAAK,GAAG,IAAI,CAACA,KAAK,CAACD,IAAI,CAAC,IAAI,CAAC;IAClC,IAAI,CAAC/H,SAAS,GAAG,IAAI,CAACA,SAAS,CAAC+H,IAAI,CAAC,IAAI,CAAC;;EAG5C;;AAEG;EACHhL,WAAWA,CAAA;IACT,IAAI,IAAI,CAAC6K,iBAAiB,KAAK,IAAI,CAACC,qBAAqB,EAAE;MACzD,OAAO,IAAI,CAACC,YAAY;;IAE1B,IAAI,CAACD,qBAAqB,GAAG,IAAI,CAACD,iBAAiB;IACnD,IAAI,CAACE,YAAY,GAAG;MAAEjE,MAAM,EAAE,IAAI,CAACA,MAAM;MAAE+D,iBAAiB,EAAE,IAAI,CAACA;IAAiB,CAAE;IACtF,OAAO,IAAI,CAACE,YAAY;;EAG1B;;AAEG;EACH7H,iBAAiBA,CAAA;IACf,OAAO;MAAE4D,MAAM,EAAE,IAAI;MAAE+D,iBAAiB,EAAE;IAAC,CAAE;;EAG/C;;AAEG;EACH5H,SAASA,CAACqC,QAAoB;IAC5B,IAAI,CAACF,WAAW,CAACG,GAAG,CAACD,QAAQ,CAAC;IAC9B,OAAO,MAAK;MACV,IAAI,CAACF,WAAW,CAACI,MAAM,CAACF,QAAQ,CAAC;IACnC,CAAC;;EAGH;;AAEG;EACH2F,KAAKA,CAACC,UAAyB;IAC7B,IAAI,CAACpE,MAAM,GAAGoE,UAAqB;IAEnC,IAAI,IAAI,CAACpE,MAAM,EAAE;MACf;;;;AAIG;MACH,MAAMqE,EAAE,GAAGA,CAAA,KAAK;QACd,IAAI,CAACN,iBAAiB,IAAI,CAAC;QAC3B,IAAI,CAACzF,WAAW,CAACV,OAAO,CAACY,QAAQ,IAAIA,QAAQ,EAAE,CAAC;MAClD,CAAC;MAED,MAAM8F,aAAa,GAAG,IAAI,CAACtE,MAAM;MAEjCsE,aAAa,CAACC,EAAE,CAAC,aAAa,EAAEF,EAAE,CAAC;MACnC,OAAO,MAAK;QACVC,aAAa,CAACE,GAAG,CAAC,aAAa,EAAEH,EAAE,CAAC;MACtC,CAAC;;IAGH,OAAO/H,SAAS;;AAEnB;AASK,SAAUmI,cAAcA,CAC5BpE,OAA+G;EAE/G,MAAM,CAACqE,cAAc,CAAC,GAAGpM,QAAQ,CAAC,MAAM,IAAIuL,kBAAkB,CAACxD,OAAO,CAACL,MAAM,CAAC,CAAC;;EAG/E,MAAM2E,aAAa,GAAGC,mBAAA,CAAAxC,gCAAgC,CACpDsC,cAAc,CAACvI,SAAS,EACxBuI,cAAc,CAACxL,WAAW,EAC1BwL,cAAc,CAACtI,iBAAiB,EAChCiE,OAAO,CAACiC,QAA6E,EACrFjC,OAAO,CAACwE,UAAU,CACnB;EAEDrM,SAAS,CAAC,MAAK;IACb,OAAOkM,cAAc,CAACP,KAAK,CAAC9D,OAAO,CAACL,MAAM,CAAC;GAC5C,EAAE,CAACK,OAAO,CAACL,MAAM,EAAE0E,cAAc,CAAC,CAAC;EAEpC9L,aAAa,CAAC+L,aAAa,CAAC;EAE5B,OAAOA,aAAa;AACtB;AC7HA,MAAMG,KAAK,GAAGjL,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;AACnD,MAAMgL,KAAK,GAAG,OAAOvL,MAAM,KAAK,WAAW;AAC3C,MAAMwL,MAAM,GAAGD,KAAK,IAAIjF,OAAO,CAAC,OAAOtG,MAAM,KAAK,WAAW,IAAKA,MAAc,CAACyL,IAAI,CAAC;AAqBtF;;AAEG;AACH,MAAMC,qBAAqB;EAqCzB3F,YAAYc,OAA2C;IApCvD;;AAEG;IACK,IAAM,CAAAL,MAAA,GAAkB,IAAI;IAOpC;;;AAGG;IACK,KAAAmF,aAAa,GAAG,IAAI5G,GAAG,EAAc;IAO7C;;AAEG;IACK,IAAkB,CAAA6G,kBAAA,GAAG,KAAK;IAElC;;AAEG;IACK,IAAY,CAAAC,YAAA,GAA0B,IAAI;IAElD;;AAEG;IACI,IAAU,CAAAC,UAAA,GAAG,EAAE;IAGpB,IAAI,CAACjF,OAAO,GAAGA,OAAO;IACtB,IAAI,CAAC8E,aAAa,GAAG,IAAI5G,GAAG,EAAc;IAC1C,IAAI,CAACgH,SAAS,CAAC,IAAI,CAACC,gBAAgB,EAAE,CAAC;IACvC,IAAI,CAACC,eAAe,EAAE;IAEtB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS,CAACxB,IAAI,CAAC,IAAI,CAAC;IAC1C,IAAI,CAAC9H,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAAC8H,IAAI,CAAC,IAAI,CAAC;IAC1D,IAAI,CAAC/H,SAAS,GAAG,IAAI,CAACA,SAAS,CAAC+H,IAAI,CAAC,IAAI,CAAC;IAC1C,IAAI,CAACyB,qBAAqB,GAAG,IAAI,CAACA,qBAAqB,CAACzB,IAAI,CAAC,IAAI,CAAC;IAClE,IAAI,CAACuB,eAAe,GAAG,IAAI,CAACA,eAAe,CAACvB,IAAI,CAAC,IAAI,CAAC;IACtD,IAAI,CAAC0B,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC1B,IAAI,CAAC,IAAI,CAAC;IACxC,IAAI,CAAC2B,YAAY,GAAG,IAAI,CAACA,YAAY,CAAC3B,IAAI,CAAC,IAAI,CAAC;;EAG1CqB,SAASA,CAACvF,MAAqB;IACrC,IAAI,CAACA,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACsF,UAAU,GAAG5D,IAAI,CAACE,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACiE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;;IAGxD,IAAI,CAACX,aAAa,CAACvH,OAAO,CAACmI,EAAE,IAAIA,EAAE,EAAE,CAAC;;EAGhCP,gBAAgBA,CAAA;IACtB,IAAI,IAAI,CAACnF,OAAO,CAACvC,OAAO,CAACkI,iBAAiB,KAAK1J,SAAS,EAAE;MACxD,IAAIyI,KAAK,IAAIC,MAAM,EAAE;;QAEnB,IAAIF,KAAK,EAAE;UACT;;;AAGG;UACHjJ,OAAO,CAACoK,IAAI,CACV,0HAA0H,CAC3H;;;QAIH,OAAO,IAAI;;;MAIb,OAAO,IAAI,CAACJ,YAAY,EAAE;;IAG5B,IAAI,IAAI,CAACxF,OAAO,CAACvC,OAAO,CAACkI,iBAAiB,IAAIjB,KAAK,IAAID,KAAK,EAAE;;MAE5D,MAAM,IAAI5K,KAAK,CACb,kOAAkO,CACnO;;IAGH,IAAI,IAAI,CAACmG,OAAO,CAACvC,OAAO,CAACkI,iBAAiB,EAAE;MAC1C,OAAO,IAAI,CAACH,YAAY,EAAE;;IAG5B,OAAO,IAAI;;EAGb;;AAEG;EACKA,YAAYA,CAAA;IAClB,MAAMK,cAAc,GAA2B;MAC7C,GAAG,IAAI,CAAC7F,OAAO,CAACvC,OAAO;;MAEvBqI,cAAc,EAAEA,CAAC,GAAGxL,IAAI,KAAI;QAAA,IAAAoF,EAAA,EAAAqG,EAAA;QAAC,QAAAA,EAAA,IAAArG,EAAA,OAAI,CAACM,OAAO,CAACvC,OAAO,EAACqI,cAAc,cAAAC,EAAA,uBAAAA,EAAA,CAAAxK,IAAA,CAAAmE,EAAA,EAAG,GAAGpF,IAAI,CAAC;MAAA;MAC3E0L,MAAM,EAAEA,CAAC,GAAG1L,IAAI,KAAI;QAAA,IAAAoF,EAAA,EAAAqG,EAAA;QAAC,QAAAA,EAAA,IAAArG,EAAA,OAAI,CAACM,OAAO,CAACvC,OAAO,EAACuI,MAAM,cAAAD,EAAA,uBAAAA,EAAA,CAAAxK,IAAA,CAAAmE,EAAA,EAAG,GAAGpF,IAAI,CAAC;MAAA;MAC3D2L,QAAQ,EAAEA,CAAC,GAAG3L,IAAI,KAAI;QAAA,IAAAoF,EAAA,EAAAqG,EAAA;QAAC,QAAAA,EAAA,IAAArG,EAAA,OAAI,CAACM,OAAO,CAACvC,OAAO,EAACwI,QAAQ,cAAAF,EAAA,uBAAAA,EAAA,CAAAxK,IAAA,CAAAmE,EAAA,EAAG,GAAGpF,IAAI,CAAC;MAAA;MAC/D4L,SAAS,EAAEA,CAAC,GAAG5L,IAAI,KAAI;QAAA,IAAAoF,EAAA,EAAAqG,EAAA;QAAC,QAAAA,EAAA,IAAArG,EAAA,OAAI,CAACM,OAAO,CAACvC,OAAO,EAACyI,SAAS,cAAAH,EAAA,uBAAAA,EAAA,CAAAxK,IAAA,CAAAmE,EAAA,EAAG,GAAGpF,IAAI,CAAC;MAAA;MACjE6L,OAAO,EAAEA,CAAC,GAAG7L,IAAI,KAAI;QAAA,IAAAoF,EAAA,EAAAqG,EAAA;QAAC,QAAAA,EAAA,IAAArG,EAAA,OAAI,CAACM,OAAO,CAACvC,OAAO,EAAC0I,OAAO,cAAAJ,EAAA,uBAAAA,EAAA,CAAAxK,IAAA,CAAAmE,EAAA,EAAG,GAAGpF,IAAI,CAAC;MAAA;MAC7D8L,iBAAiB,EAAEA,CAAC,GAAG9L,IAAI,KAAI;QAAA,IAAAoF,EAAA,EAAAqG,EAAA;QAAC,QAAAA,EAAA,IAAArG,EAAA,OAAI,CAACM,OAAO,CAACvC,OAAO,EAAC2I,iBAAiB,cAAAL,EAAA,uBAAAA,EAAA,CAAAxK,IAAA,CAAAmE,EAAA,EAAG,GAAGpF,IAAI,CAAC;MAAA;MACjF+L,aAAa,EAAEA,CAAC,GAAG/L,IAAI,KAAI;QAAA,IAAAoF,EAAA,EAAAqG,EAAA;QAAC,QAAAA,EAAA,IAAArG,EAAA,OAAI,CAACM,OAAO,CAACvC,OAAO,EAAC4I,aAAa,cAAAN,EAAA,uBAAAA,EAAA,CAAAxK,IAAA,CAAAmE,EAAA,EAAG,GAAGpF,IAAI,CAAC;MAAA;MACzEgM,QAAQ,EAAEA,CAAC,GAAGhM,IAAI,KAAI;QAAA,IAAAoF,EAAA,EAAAqG,EAAA;QAAC,QAAAA,EAAA,IAAArG,EAAA,OAAI,CAACM,OAAO,CAACvC,OAAO,EAAC6I,QAAQ,cAAAP,EAAA,uBAAAA,EAAA,CAAAxK,IAAA,CAAAmE,EAAA,EAAG,GAAGpF,IAAI,CAAC;MAAA;MAC/DiM,cAAc,EAAEA,CAAC,GAAGjM,IAAI,KAAI;QAAA,IAAAoF,EAAA,EAAAqG,EAAA;QAAC,QAAAA,EAAA,IAAArG,EAAA,OAAI,CAACM,OAAO,CAACvC,OAAO,EAAC8I,cAAc,cAAAR,EAAA,uBAAAA,EAAA,CAAAxK,IAAA,CAAAmE,EAAA,EAAG,GAAGpF,IAAI,CAAC;MAAA;KAC5E;IACD,MAAMqF,MAAM,GAAG,IAAI6G,MAAM,CAACX,cAAc,CAAC;;IAIzC,OAAOlG,MAAM;;EAGf;;AAEG;EACH0F,SAASA,CAAA;IACP,OAAO,IAAI,CAAC1F,MAAM;;EAGpB;;AAEG;EACH5D,iBAAiBA,CAAA;IACf,OAAO,IAAI;;EAGb;;AAEG;EACHD,SAASA,CAAC2K,aAAyB;IACjC,IAAI,CAAC3B,aAAa,CAAC1G,GAAG,CAACqI,aAAa,CAAC;IAErC,OAAO,MAAK;MACV,IAAI,CAAC3B,aAAa,CAACzG,MAAM,CAACoI,aAAa,CAAC;IAC1C,CAAC;;EAGH;;;;AAIG;EACHlB,QAAQA,CAACmB,IAAoB;;IAE3B,OAAO,MAAK;MACV,IAAI,CAAC3B,kBAAkB,GAAG,IAAI;;MAE9B4B,YAAY,CAAC,IAAI,CAACC,2BAA2B,CAAC;MAE9C,IAAI,IAAI,CAACjH,MAAM,IAAI,CAAC,IAAI,CAACA,MAAM,CAACI,WAAW,IAAI2G,IAAI,CAACrM,MAAM,KAAK,CAAC,EAAE;;;QAGhE,IAAI,CAACsF,MAAM,CAACQ,UAAU,CAAC,IAAI,CAACH,OAAO,CAACvC,OAAO,CAAC;OAC7C,MAAM;;;;;;QAML,IAAI,CAAC6H,qBAAqB,CAACoB,IAAI,CAAC;;MAGlC,OAAO,MAAK;QACV,IAAI,CAAC3B,kBAAkB,GAAG,KAAK;QAC/B,IAAI,CAACK,eAAe,EAAE;MACxB,CAAC;IACH,CAAC;;EAGH;;AAEG;EACKE,qBAAqBA,CAACoB,IAAoB;IAChD,IAAI,IAAI,CAAC/G,MAAM,IAAI,CAAC,IAAI,CAACA,MAAM,CAACI,WAAW,EAAE;;MAE3C,IAAI,IAAI,CAACiF,YAAY,KAAK,IAAI,EAAE;;QAE9B,IAAI,CAACA,YAAY,GAAG0B,IAAI;QACxB;;MAEF,MAAMG,YAAY,GAAG,IAAI,CAAC7B,YAAY,CAAC3K,MAAM,KAAKqM,IAAI,CAACrM,MAAM,IACxD,IAAI,CAAC2K,YAAY,CAAC8B,KAAK,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,KAAKL,IAAI,CAACM,KAAK,CAAC,CAAC;MAEjE,IAAIH,YAAY,EAAE;;QAEhB;;;IAIJ,IAAI,IAAI,CAAClH,MAAM,IAAI,CAAC,IAAI,CAACA,MAAM,CAACI,WAAW,EAAE;;MAE3C,IAAI,CAACJ,MAAM,CAACsH,OAAO,EAAE;;IAGvB,IAAI,CAAC/B,SAAS,CAAC,IAAI,CAACM,YAAY,EAAE,CAAC;;IAGnC,IAAI,CAACR,YAAY,GAAG0B,IAAI;;EAG1B;;;;AAIG;EACKtB,eAAeA,CAAA;IACrB,MAAM8B,iBAAiB,GAAG,IAAI,CAACjC,UAAU;IACzC,MAAMhB,aAAa,GAAG,IAAI,CAACtE,MAAM;;IAGjC,IAAI,CAACiH,2BAA2B,GAAGO,UAAU,CAAC,MAAK;MACjD,IAAI,IAAI,CAACpC,kBAAkB,IAAI,IAAI,CAACE,UAAU,KAAKiC,iBAAiB,EAAE;;QAEpE,IAAIjD,aAAa,EAAE;;UAEjBA,aAAa,CAAC9D,UAAU,CAAC,IAAI,CAACH,OAAO,CAACvC,OAAO,CAAC;;QAEhD;;MAEF,IAAIwG,aAAa,IAAI,CAACA,aAAa,CAAClE,WAAW,EAAE;QAC/CkE,aAAa,CAACgD,OAAO,EAAE;QACvB,IAAI,IAAI,CAAChC,UAAU,KAAKiC,iBAAiB,EAAE;UACzC,IAAI,CAAChC,SAAS,CAAC,IAAI,CAAC;;;;;KAKzB,EAAE,CAAC,CAAC;;AAER;SAuBekC,SAASA,CACvBpH,OAAA,GAA4B,EAAE,EAC9B0G,IAAA,GAAuB,EAAE;EAEzB,MAAMW,iBAAiB,GAAG1F,MAAM,CAAC3B,OAAO,CAAC;EAEzCqH,iBAAiB,CAAC5J,OAAO,GAAGuC,OAAO;EAEnC,MAAM,CAACsH,eAAe,CAAC,GAAGrP,QAAQ,CAAC,MAAM,IAAI4M,qBAAqB,CAACwC,iBAAiB,CAAC,CAAC;EAEtF,MAAM1H,MAAM,GAAG9B,WAAA,CAAAtE,oBAAoB,CACjC+N,eAAe,CAACxL,SAAS,EACzBwL,eAAe,CAACjC,SAAS,EACzBiC,eAAe,CAACvL,iBAAiB,CAClC;EAEDxD,aAAa,CAACoH,MAAM,CAAC;;;EAIrBxH,SAAS,CAACmP,eAAe,CAAC/B,QAAQ,CAACmB,IAAI,CAAC,CAAC;;;EAIzCtC,cAAc,CAAC;IACbzE,MAAM;IACNsC,QAAQ,EAAEA,CAAC;MAAEyB;IAAiB,CAAE,KAAI;MAClC,IAAI1D,OAAO,CAACuH,2BAA2B,KAAK,KAAK,EAAE;;QAEjD,OAAO,IAAI;;;MAIb,IAAIvH,OAAO,CAAC2F,iBAAiB,IAAIjC,iBAAiB,KAAK,CAAC,EAAE;QACxD,OAAO,CAAC;;MAEV,OAAOA,iBAAiB,GAAG,CAAC;;EAE/B,EAAC;EAEF,OAAO/D,MAAM;AACf;AC1UO,MAAM6H,aAAa,GAAGC,aAAa,CAAqB;EAC7D9H,MAAM,EAAE;AACT;AAEY,MAAA+H,cAAc,GAAGF,aAAa,CAACG,QAAA;AAE5C;;AAEG;AACU,MAAAC,gBAAgB,GAAGA,CAAA,KAAMC,UAAU,CAACL,aAAa;AAQ9D;;;;AAIG;AACa,SAAAM,cAAcA,CAAC;EAC7BC,QAAQ;EAAEC,SAAS;EAAEC,UAAU;EAAE,GAAGC;AAAa,CAC7B;EACpB,MAAMvI,MAAM,GAAGyH,SAAS,CAACc,aAAa,CAAC;EAEvC,IAAI,CAACvI,MAAM,EAAE;IACX,OAAO,IAAI;;EAGb,OACElI,KAAC,CAAA4B,aAAA,CAAAmO,aAAa,CAACW,QAAQ;IAACvP,KAAK,EAAE;MAAE+G;IAAM;EAAE,GACtCsI,UAAU,EACXxQ,KAAC,CAAA4B,aAAA,CAAAqO,cAAc,QACZ,CAAC;IAAE/H,MAAM,EAAEsE;EAAa,CAAE,KACzBxM,KAAA,CAAA4B,aAAA,CAACoI,aAAa,EAAC;IAAA9B,MAAM,EAAEsE;EAAa,EACrC,CACc,EAChB8D,QAAQ,EACRC,SAAS,CACa;AAE7B;ACvCa,MAAAI,UAAU,GAAIjJ,KAAsB,IAAI;EACnD,MAAM,CAACP,OAAO,EAAEyJ,UAAU,CAAC,GAAGpQ,QAAQ,CAAwB,IAAI,CAAC;EACnE,MAAM;IAAE0H,MAAM,EAAEsE;EAAa,CAAE,GAAG2D,gBAAgB,EAAE;EAEpDzP,SAAS,CAAC,MAAK;;IACb,IAAI,CAACyG,OAAO,EAAE;MACZ;;IAGF,IAAI,EAAAc,EAAA,GAAAP,KAAK,CAACQ,MAAM,cAAAD,EAAA,uBAAAA,EAAA,CAAEK,WAAW,MAAIkE,aAAa,aAAbA,aAAa,KAAb,kBAAAA,aAAa,CAAElE,WAAW,GAAE;MAC3D;;IAGF,MAAM;MACJuI,SAAS,GAAG,YAAY;MAAE3I,MAAM;MAAE4I,YAAY,GAAG,EAAE;MAAEC,WAAW;MAAEC,UAAU,GAAG;IAAI,CACpF,GAAGtJ,KAAK;IAET,MAAMuJ,UAAU,GAAG/I,MAAM,IAAIsE,aAAa;IAE1C,IAAI,CAACyE,UAAU,EAAE;MACflN,OAAO,CAACoK,IAAI,CAAC,kGAAkG,CAAC;MAChH;;IAGF,MAAM+C,MAAM,GAAGC,gBAAgB,CAAC;MAC9BJ,WAAW;MACX7I,MAAM,EAAE+I,UAAU;MAClB9J,OAAO;MACP0J,SAAS;MACTG,UAAU;MACVF;IACD,EAAC;IAEFG,UAAU,CAACG,cAAc,CAACF,MAAM,CAAC;IACjC,OAAO,MAAMD,UAAU,CAACI,gBAAgB,CAACR,SAAS,CAAC;GACpD,EAAE,CAACnJ,KAAK,CAACQ,MAAM,EAAEsE,aAAa,EAAErF,OAAO,CAAC,CAAC;EAE1C,OACEnH,KAAK,CAAA4B,aAAA;IAAAmE,GAAG,EAAE6K,UAAU;IAAEU,SAAS,EAAE5J,KAAK,CAAC4J,SAAS;IAAEC,KAAK,EAAE;MAAEC,UAAU,EAAE;IAAQ;EAAE,CAC9E,EAAA9J,KAAK,CAAC4I,QAAQ,CACX;AAEV;ACzCa,MAAAmB,YAAY,GAAI/J,KAAwB,IAAI;EACvD,MAAM,CAACP,OAAO,EAAEyJ,UAAU,CAAC,GAAGpQ,QAAQ,CAAwB,IAAI,CAAC;EACnE,MAAM;IAAE0H,MAAM,EAAEsE;EAAa,CAAE,GAAG2D,gBAAgB,EAAE;EAEpDzP,SAAS,CAAC,MAAK;;IACb,IAAI,CAACyG,OAAO,EAAE;MACZ;;IAGF,IAAI,EAAAc,EAAA,GAAAP,KAAK,CAACQ,MAAM,cAAAD,EAAA,uBAAAA,EAAA,CAAEK,WAAW,MAAIkE,aAAa,aAAbA,aAAa,KAAb,kBAAAA,aAAa,CAAElE,WAAW,GAAE;MAC3D;;IAGF,MAAM;MACJuI,SAAS,GAAG,cAAc;MAC1B3I,MAAM;MACN4I,YAAY,GAAG,EAAE;MACjBE,UAAU,GAAG;IAAI,CAClB,GAAGtJ,KAAK;IAET,MAAMuJ,UAAU,GAAG/I,MAAM,IAAIsE,aAAa;IAE1C,IAAI,CAACyE,UAAU,EAAE;MACflN,OAAO,CAACoK,IAAI,CAAC,oGAAoG,CAAC;MAClH;;IAGF,MAAM+C,MAAM,GAAGQ,kBAAkB,CAAC;MAChCb,SAAS;MACT3I,MAAM,EAAE+I,UAAU;MAClB9J,OAAO;MACP2J,YAAY;MACZE;IACD,EAAC;IAEFC,UAAU,CAACG,cAAc,CAACF,MAAM,CAAC;IACjC,OAAO,MAAMD,UAAU,CAACI,gBAAgB,CAACR,SAAS,CAAC;EACrD,CAAC,EAAE,CACDnJ,KAAK,CAACQ,MAAM,EACZsE,aAAa,EACbrF,OAAO,CACR,CAAC;EAEF,OACEnH,KAAK,CAAA4B,aAAA;IAAAmE,GAAG,EAAE6K,UAAU;IAAEU,SAAS,EAAE5J,KAAK,CAAC4J,SAAS;IAAEC,KAAK,EAAE;MAAEC,UAAU,EAAE;IAAQ;EAAE,CAC9E,EAAA9J,KAAK,CAAC4I,QAAQ,CACX;AAEV;ACxDO,MAAMqB,oBAAoB,GAAG3B,aAAa,CAAqC;EACpF4B,WAAW,EAAEpN;AACd;AAEY,MAAAqN,gBAAgB,GAAGA,CAAA,KAAMzB,UAAU,CAACuB,oBAAoB;ACFxD,MAAAG,eAAe,GAAmCpK,KAAK,IAAG;EACrE,MAAMqK,GAAG,GAAGrK,KAAK,CAACsK,EAAE,IAAI,KAAK;EAC7B,MAAM;IAAEC;EAAkB,CAAE,GAAGJ,gBAAgB,EAAE;EAEjD;;IAEE7R,KAAC,CAAA4B,aAAA,CAAAmQ,GAAG,EACE;MAAA,GAAArK,KAAK;MACT3B,GAAG,EAAEkM,kBAAkB;MACA,4BAAE;MACzBV,KAAK,EAAE;QACLW,UAAU,EAAE,UAAU;QACtB,GAAGxK,KAAK,CAAC6J;MACV;IAAA;EACD;AAEN;AChBO,MAAMY,eAAe,GAAmCnS,KAAK,CAACyJ,UAAU,CAAC,CAAC/B,KAAK,EAAE3B,GAAG,KAAI;EAC7F,MAAM;IAAE6L;EAAW,CAAE,GAAGC,gBAAgB,EAAE;EAC1C,MAAME,GAAG,GAAGrK,KAAK,CAACsK,EAAE,IAAI,KAAK;EAE7B;;IAEEhS,KAAA,CAAA4B,aAAA,CAACmQ,GAAG;MAAA,GACErK,KAAK;MACT3B,GAAG,EAAEA,GAAG;MACe,4BAAE;MACzB6L,WAAW,EAAEA,WAAW;MACxBL,KAAK,EAAE;QACLW,UAAU,EAAE,QAAQ;QACpB,GAAGxK,KAAK,CAAC6J;MACV;IAAA;EACD;AAEN,CAAC;;ACpBD;;;;AAIG;AACH,SAASa,gBAAgBA,CAAC5K,SAAc;EACtC,OAAO,CAAC,EACN,OAAOA,SAAS,KAAK,UAAU,IAC5BA,SAAS,CAAC5D,SAAS,IACnB4D,SAAS,CAAC5D,SAAS,CAACyO,gBAAgB,CACxC;AACH;AAEA;;;;AAIG;AACH,SAASC,qBAAqBA,CAAC9K,SAAc;;EAC3C,OAAO,CAAC,EACN,OAAOA,SAAS,KAAK,QAAQ,IAC1B,EAAAS,EAAA,GAAAT,SAAS,CAAC+K,QAAQ,cAAAtK,EAAA,uBAAAA,EAAA,CAAE8B,QAAQ,EAAE,MAAK,2BAA2B,CAClE;AACH;AA6CA;;;;;;;;;;AAUE;MACWyI,aAAa;EAexB/K,YAAYgL,SAA8B,EAAE;IAC1CvK,MAAM;IACNR,KAAK,GAAG,EAAE;IACVsK,EAAE,GAAG,KAAK;IACVV,SAAS,GAAG,EAAE;IACdoB;EAAK,CACgB;IARvB,IAAG,CAAA3M,GAAA,GAAa,IAAI;IASlB,IAAI,CAACe,EAAE,GAAG8C,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,UAAU,CAAC,CAACC,QAAQ,EAAE;IAC3D,IAAI,CAAC0I,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACvK,MAAM,GAAGA,MAAoC;IAClD,IAAI,CAACR,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACP,OAAO,GAAGxF,QAAQ,CAACC,aAAa,CAACoQ,EAAE,CAAC;IACzC,IAAI,CAAC7K,OAAO,CAACwL,SAAS,CAAChM,GAAG,CAAC,gBAAgB,CAAC;IAE5C,IAAI2K,SAAS,EAAE;MACb,IAAI,CAACnK,OAAO,CAACwL,SAAS,CAAChM,GAAG,CAAC,GAAG2K,SAAS,CAACsB,KAAK,CAAC,GAAG,CAAC,CAAC;;IAGrD,IAAIF,KAAK,EAAE;MACTrS,MAAM,CAACwS,IAAI,CAACH,KAAK,CAAC,CAAC5M,OAAO,CAAC4D,GAAG,IAAG;QAC/B,IAAI,CAACvC,OAAO,CAAC2L,YAAY,CAACpJ,GAAG,EAAEgJ,KAAK,CAAChJ,GAAG,CAAC,CAAC;MAC5C,CAAC,CAAC;;IAGJ,IAAI,IAAI,CAACxB,MAAM,CAAC6K,aAAa,EAAE;;;MAG7BC,SAAS,CAAC,MAAK;QACb,IAAI,CAAC3J,MAAM,EAAE;MACf,CAAC,CAAC;KACH,MAAM;MACL,IAAI,CAACA,MAAM,EAAE;;;EAIjBA,MAAMA,CAAA;;IACJ,MAAM7B,SAAS,GAAG,IAAI,CAACiL,SAAS;IAChC,MAAM/K,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,MAAMQ,MAAM,GAAG,IAAI,CAACA,MAAoC;IAExD,IAAIkK,gBAAgB,CAAC5K,SAAS,CAAC,IAAI8K,qBAAqB,CAAC9K,SAAS,CAAC,EAAE;MACnEE,KAAK,CAAC3B,GAAG,GAAIA,GAAM,IAAI;QACrB,IAAI,CAACA,GAAG,GAAGA,GAAG;MAChB,CAAC;;IAGH,IAAI,CAACmB,YAAY,GAAGlH,KAAK,CAAC4B,aAAa,CAAC4F,SAAS,EAAEE,KAAK,CAAC;IAEzD,CAAAO,EAAA,GAAAC,MAAM,KAAN,QAAAA,MAAM,KAAN,kBAAAA,MAAM,CAAEhC,gBAAgB,cAAA+B,EAAA,uBAAAA,EAAA,CAAEpB,WAAW,CAAC,IAAI,CAACC,EAAE,EAAE,IAAI,CAAC;;EAGtDmM,WAAWA,CAACvL,KAAA,GAA6B,EAAE;IACzC,IAAI,CAACA,KAAK,GAAG;MACX,GAAG,IAAI,CAACA,KAAK;MACb,GAAGA;KACJ;IAED,IAAI,CAAC2B,MAAM,EAAE;;EAGfmG,OAAOA,CAAA;;IACL,MAAMtH,MAAM,GAAG,IAAI,CAACA,MAAoC;IAExD,CAAAD,EAAA,GAAAC,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEhC,gBAAgB,MAAE,QAAA+B,EAAA,uBAAAA,EAAA,CAAAZ,cAAc,CAAC,IAAI,CAACP,EAAE,CAAC;;AAEpD;ACrID,MAAMoM,aAAc,SAAQC,QAI3B;EAKCC,KAAKA,CAAA;IACH,MAAM1L,KAAK,GAAkB;MAC3BQ,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBrC,IAAI,EAAE,IAAI,CAACA,IAAI;MACfwN,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BC,QAAQ,EAAE,KAAK;MACfC,SAAS,EAAE,IAAI,CAACA,SAAS;MACzBC,MAAM,EAAEA,CAAA,KAAM,IAAI,CAACA,MAAM,EAAE;MAC3BC,gBAAgB,EAAEA,CAACC,UAAU,GAAG,EAAE,KAAK,IAAI,CAACD,gBAAgB,CAACC,UAAU,CAAC;MACxEC,UAAU,EAAEA,CAAA,KAAM,IAAI,CAACA,UAAU;KAClC;IAED,IAAI,CAAE,IAAI,CAAClB,SAAiB,CAACmB,WAAW,EAAE;MACxC,MAAMC,mBAAmB,GAAIC,MAAc,IAAY;QACrD,OAAOA,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGF,MAAM,CAACG,SAAS,CAAC,CAAC,CAAC;MAC7D,CAAC;MAED,IAAI,CAACxB,SAAS,CAACmB,WAAW,GAAGC,mBAAmB,CAAC,IAAI,CAACN,SAAS,CAACW,IAAI,CAAC;;IAGvE,MAAMtC,WAAW,GAAG,IAAI,CAACA,WAAW,CAACxF,IAAI,CAAC,IAAI,CAAC;IAC/C,MAAM6F,kBAAkB,GAAoD9K,OAAO,IAAG;MACpF,IAAIA,OAAO,IAAI,IAAI,CAACgN,iBAAiB,IAAIhN,OAAO,CAACgC,UAAU,KAAK,IAAI,CAACgL,iBAAiB,EAAE;QACtFhN,OAAO,CAACiN,WAAW,CAAC,IAAI,CAACD,iBAAiB,CAAC;;IAE/C,CAAC;IACD,MAAME,OAAO,GAAG;MAAEzC,WAAW;MAAEK;IAAkB,CAAE;IACnD,MAAMzK,SAAS,GAAG,IAAI,CAACiL,SAAS;;;IAGhC,MAAM6B,qBAAqB,GAA4BtU,KAAK,CAACiK,IAAI,CAACsK,cAAc,IAAG;MACjF,OACEvU,KAAA,CAAA4B,aAAA,CAAC+P,oBAAoB,CAACjB,QAAQ,EAAC;QAAAvP,KAAK,EAAEkT;MAAO,GAC1CrU,KAAK,CAAC4B,aAAa,CAAC4F,SAAS,EAAE+M,cAAc,CAAC,CACjB;IAEpC,CAAC,CAAC;IAEFD,qBAAqB,CAACV,WAAW,GAAG,eAAe;IAEnD,IAAI,IAAI,CAAC/N,IAAI,CAAC2O,MAAM,EAAE;MACpB,IAAI,CAACL,iBAAiB,GAAG,IAAI;KAC9B,MAAM,IAAI,IAAI,CAAC5L,OAAO,CAACkM,oBAAoB,EAAE;MAC5C,IAAI,CAACN,iBAAiB,GAAGxS,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC2G,OAAO,CAACkM,oBAAoB,CAAC;KACnF,MAAM;MACL,IAAI,CAACN,iBAAiB,GAAGxS,QAAQ,CAACC,aAAa,CAAC,IAAI,CAACiE,IAAI,CAAC6O,QAAQ,GAAG,MAAM,GAAG,KAAK,CAAC;;IAGtF,IAAI,IAAI,CAACP,iBAAiB,EAAE;;;;MAI1B,IAAI,CAACA,iBAAiB,CAAC5C,KAAK,CAACW,UAAU,GAAG,SAAS;;IAGrD,IAAIF,EAAE,GAAG,IAAI,CAACnM,IAAI,CAAC6O,QAAQ,GAAG,MAAM,GAAG,KAAK;IAE5C,IAAI,IAAI,CAACnM,OAAO,CAACyJ,EAAE,EAAE;MACnBA,EAAE,GAAG,IAAI,CAACzJ,OAAO,CAACyJ,EAAE;;IAGtB,MAAM;MAAEV,SAAS,GAAG;IAAE,CAAE,GAAG,IAAI,CAAC/I,OAAO;IAEvC,IAAI,CAACoM,qBAAqB,GAAG,IAAI,CAACA,qBAAqB,CAACvI,IAAI,CAAC,IAAI,CAAC;IAClE,IAAI,CAAClE,MAAM,CAACuE,EAAE,CAAC,iBAAiB,EAAE,IAAI,CAACkI,qBAAqB,CAAC;IAE7D,IAAI,CAAC5N,QAAQ,GAAG,IAAIyL,aAAa,CAAC8B,qBAAqB,EAAE;MACvDpM,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBR,KAAK;MACLsK,EAAE;MACFV,SAAS,EAAE,QAAQ,IAAI,CAACzL,IAAI,CAAC+O,IAAI,CAACV,IAAI,IAAI5C,SAAS,EAAE,CAACuD,IAAI,EAAE;MAC5DnC,KAAK,EAAE,IAAI,CAACnK,OAAO,CAACmK;IACrB,EAAC;;EAGJ,IAAIoC,GAAGA,CAAA;;IACL,IACE,IAAI,CAAC/N,QAAQ,CAACI,OAAO,CAAC4N,iBAAiB,IACpC,EAAC,CAAA9M,EAAA,OAAI,CAAClB,QAAQ,CAACI,OAAO,CAAC4N,iBAAiB,cAAA9M,EAAA,uBAAAA,EAAA,CAAE+M,YAAY,CAAC,wBAAwB,CAAC,GACnF;MACA,MAAM5S,KAAK,CAAC,8DAA8D,CAAC;;IAG7E,OAAO,IAAI,CAAC2E,QAAQ,CAACI,OAAsB;;EAG7C,IAAI8N,UAAUA,CAAA;IACZ,IAAI,IAAI,CAACpP,IAAI,CAAC2O,MAAM,EAAE;MACpB,OAAO,IAAI;;IAGb,OAAO,IAAI,CAACL,iBAAiB;;EAG/BQ,qBAAqBA,CAAA;IACnB,MAAM;MAAEO,IAAI;MAAEC;IAAE,CAAE,GAAG,IAAI,CAACjN,MAAM,CAACJ,KAAK,CAACsN,SAAS;IAEhD,IAAIF,IAAI,IAAI,IAAI,CAAC1B,MAAM,EAAE,IAAI2B,EAAE,IAAI,IAAI,CAAC3B,MAAM,EAAE,GAAG,IAAI,CAAC3N,IAAI,CAACwP,QAAQ,EAAE;MACrE,IAAI,IAAI,CAACtO,QAAQ,CAACW,KAAK,CAAC4L,QAAQ,EAAE;QAChC;;MAGF,IAAI,CAACgC,UAAU,EAAE;KAClB,MAAM;MACL,IAAI,CAAC,IAAI,CAACvO,QAAQ,CAACW,KAAK,CAAC4L,QAAQ,EAAE;QACjC;;MAGF,IAAI,CAACiC,YAAY,EAAE;;;EAIvBC,MAAMA,CAAC3P,IAAqB,EAAEwN,WAAiC;IAC7D,MAAMJ,WAAW,GAAIvL,KAA2B,IAAI;MAClD,IAAI,CAACX,QAAQ,CAACkM,WAAW,CAACvL,KAAK,CAAC;IAClC,CAAC;IAED,IAAI7B,IAAI,CAAC+O,IAAI,KAAK,IAAI,CAAC/O,IAAI,CAAC+O,IAAI,EAAE;MAChC,OAAO,KAAK;;IAGd,IAAI,OAAO,IAAI,CAACrM,OAAO,CAACiN,MAAM,KAAK,UAAU,EAAE;MAC7C,MAAMC,OAAO,GAAG,IAAI,CAAC5P,IAAI;MACzB,MAAM6P,cAAc,GAAG,IAAI,CAACrC,WAAW;MAEvC,IAAI,CAACxN,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACwN,WAAW,GAAGA,WAAW;MAE9B,OAAO,IAAI,CAAC9K,OAAO,CAACiN,MAAM,CAAC;QACzBC,OAAO;QACPC,cAAc;QACdC,OAAO,EAAE9P,IAAI;QACb+P,cAAc,EAAEvC,WAAW;QAC3BJ,WAAW,EAAEA,CAAA,KAAMA,WAAW,CAAC;UAAEpN,IAAI;UAAEwN;QAAW,CAAE;MACrD,EAAC;;IAGJ,IAAIxN,IAAI,KAAK,IAAI,CAACA,IAAI,IAAI,IAAI,CAACwN,WAAW,KAAKA,WAAW,EAAE;MAC1D,OAAO,IAAI;;IAGb,IAAI,CAACxN,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACwN,WAAW,GAAGA,WAAW;IAE9BJ,WAAW,CAAC;MAAEpN,IAAI;MAAEwN;IAAW,CAAE,CAAC;IAElC,OAAO,IAAI;;EAGbiC,UAAUA,CAAA;IACR,IAAI,CAACvO,QAAQ,CAACkM,WAAW,CAAC;MACxBK,QAAQ,EAAE;IACX,EAAC;IACF,IAAI,CAACvM,QAAQ,CAACI,OAAO,CAACwL,SAAS,CAAChM,GAAG,CAAC,0BAA0B,CAAC;;EAGjE4O,YAAYA,CAAA;IACV,IAAI,CAACxO,QAAQ,CAACkM,WAAW,CAAC;MACxBK,QAAQ,EAAE;IACX,EAAC;IACF,IAAI,CAACvM,QAAQ,CAACI,OAAO,CAACwL,SAAS,CAACkD,MAAM,CAAC,0BAA0B,CAAC;;EAGpErG,OAAOA,CAAA;IACL,IAAI,CAACzI,QAAQ,CAACyI,OAAO,EAAE;IACvB,IAAI,CAACtH,MAAM,CAACwE,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACiI,qBAAqB,CAAC;IAC9D,IAAI,CAACR,iBAAiB,GAAG,IAAI;;AAEhC;AAEe,SAAA2B,qBAAqBA,CACnCrD,SAAc,EACdlK,OAA+C;EAE/C,OAAQb,KAA4B,IAAI;;;;IAItC,IAAI,CAAEA,KAAK,CAACQ,MAAqC,CAAChC,gBAAgB,EAAE;MAClE,OAAO,EAAE;;IAGX,OAAO,IAAIgN,aAAa,CAACT,SAAS,EAAE/K,KAAK,EAAEa,OAAO,CAAmC;EACvF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}